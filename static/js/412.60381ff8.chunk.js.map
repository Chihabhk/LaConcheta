{"version":3,"file":"static/js/412.60381ff8.chunk.js","mappings":"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","sources":["Components/DeleteConfirmationModal.tsx","Components/Cuenta.tsx","Components/Header.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n    Button,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Divider,\r\n    Modal,\r\n    ModalDialog,\r\n    Typography,\r\n} from \"@mui/joy\";\r\nimport { WarningRounded } from \"@mui/icons-material\";\r\nimport { removeAllFromCart } from \"../features/menuSlice\";\r\n\r\nconst DeleteConfirmationModal = ({ open, setOpen, items }) => {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <Modal open={open}>\r\n            <ModalDialog variant=\"outlined\" role=\"alertdialog\">\r\n                <DialogTitle>\r\n                    <WarningRounded />\r\n                    Confirmación\r\n                </DialogTitle>\r\n                <Divider />\r\n                <DialogContent>\r\n                    ¿Confirmas que deseas eliminar estos artículos seleccionados\r\n                    del carrito?\r\n                </DialogContent>\r\n                {items.map((item) => (\r\n                    <Typography key={item.name} fontSize={12}>\r\n                        {item.quantity} x {item.name}\r\n                    </Typography>\r\n                ))}\r\n\r\n                <DialogActions>\r\n                    <Button\r\n                        variant=\"solid\"\r\n                        color=\"danger\"\r\n                        onClick={() => {\r\n                            setOpen(false);\r\n                            dispatch(removeAllFromCart(items));\r\n                        }}>\r\n                        Eliminar\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"plain\"\r\n                        color=\"neutral\"\r\n                        onClick={() => setOpen(false)}>\r\n                        Cancelar\r\n                    </Button>\r\n                </DialogActions>\r\n            </ModalDialog>\r\n        </Modal>\r\n    );\r\n};\r\nexport default DeleteConfirmationModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    IconButton,\r\n    Divider,\r\n    Typography,\r\n    Checkbox,\r\n    Chip,\r\n    Accordion,\r\n    AccordionDetails,\r\n    AccordionSummary,\r\n    AccordionGroup,\r\n    accordionClasses,\r\n    Button,\r\n} from \"@mui/joy\";\r\nimport { Add, PriorityHigh, Receipt, Remove } from \"@mui/icons-material\";\r\nimport DeleteConfirmationModal from \"./DeleteConfirmationModal.tsx\";\r\nimport { addItemToCart, removeItemFromCart } from \"../features/menuSlice\";\r\n\r\ninterface Item {\r\n    name: string;\r\n    description: string;\r\n    price: string;\r\n    quantity: number;\r\n    url: string;\r\n}\r\n\r\ninterface State {\r\n    menu: {\r\n        cartItems: Item[];\r\n    };\r\n}\r\nconst calculateTotal = (items: Item[] | Item) => {\r\n    const arrayItems = Array.isArray(items) ? items : [items];\r\n    return arrayItems.reduce((total, item) => {\r\n        const priceMatch = item.price.match(/[\\d.]+/);\r\n        const price = priceMatch ? parseFloat(priceMatch[0]) : 0;\r\n        return total + price * item.quantity;\r\n    }, 0);\r\n};\r\n\r\nconst QuantityEdit = ({ item }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                gap: 5,\r\n                flexDirection: \"row\",\r\n                alignContent: \"center\",\r\n                alignItems: \"center\",\r\n            }}>\r\n            <IconButton\r\n                variant=\"soft\"\r\n                onClick={() => {\r\n                    dispatch(removeItemFromCart(item));\r\n                }}>\r\n                <Remove />\r\n            </IconButton>\r\n            <Typography level=\"body-lg\" sx={{ textAlign: \"center\" }}>\r\n                {item.quantity}\r\n            </Typography>\r\n            <IconButton\r\n                variant=\"soft\"\r\n                onClick={() => dispatch(addItemToCart(item))}>\r\n                <Add />\r\n            </IconButton>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Cuenta = () => {\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [btnDisabled, setBtnDisabled] = useState(true);\r\n    const [selectedItems, setSelectedItems] = useState<Item[]>([]);\r\n    const { cartItems } = useSelector((state: State) => state.menu);\r\n    const total = calculateTotal(cartItems);\r\n\r\n    useEffect(() => {\r\n        selectedItems.length > 0 ? setBtnDisabled(false) : setBtnDisabled(true);\r\n    }, [selectedItems]);\r\n\r\n    const handleItemChecked = (item: Item) => {\r\n        if (\r\n            selectedItems.some(\r\n                (selectedItem) => selectedItem.name === item.name\r\n            )\r\n        ) {\r\n            setSelectedItems((prevItems) =>\r\n                prevItems.filter((prevItem) => prevItem.name !== item.name)\r\n            );\r\n        } else {\r\n            setSelectedItems((prevItems) => [...prevItems, item]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                marginTop: \"2em\",\r\n                alignContent: \"center\",\r\n                justifyContent: \"center\",\r\n            }}>\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    gap: 5,\r\n                    alignContent: \"center\",\r\n                    justifyContent: \"center \",\r\n                    alignItems: \"center\",\r\n                    marginBottom: \"1em\",\r\n                }}>\r\n                <Typography\r\n                    level=\"h1\"\r\n                    sx={{\r\n                        alignSelf: \"center\",\r\n                        fontWeight: 600,\r\n                        color: \"primary\",\r\n                    }}>\r\n                    Cuenta\r\n                </Typography>\r\n                <Receipt sx={{ fontSize: 50 }} />\r\n            </div>\r\n            <Divider sx={{ \"--Divider-childPosition\": \"80%\" }}>\r\n                <Chip size=\"lg\">\r\n                    Total: {total} {\" €\"}\r\n                </Chip>\r\n            </Divider>\r\n            <AccordionGroup\r\n                size=\"md\"\r\n                transition=\"0.2s ease\"\r\n                sx={{\r\n                    [`& .${accordionClasses.root}`]: {\r\n                        marginTop: \"0.5rem\",\r\n                        transition: \"0.2s ease\",\r\n                        '& button:not([aria-expanded=\"true\"])': {\r\n                            transition: \"0.2s ease\",\r\n                            paddingBottom: \"0.625rem\",\r\n                        },\r\n                        \"& button:hover\": {\r\n                            background: \"transparent\",\r\n                        },\r\n                    },\r\n                    [`& .${accordionClasses.root}.${accordionClasses.expanded}`]:\r\n                        {\r\n                            bgcolor: \"background.level1\",\r\n                            borderRadius: \"md\",\r\n                            borderBottom: \"1px solid\",\r\n                            borderColor: \"background.level2\",\r\n                            boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\",\r\n                        },\r\n                }}>\r\n                <Accordion sx={{ m: 1 }} defaultExpanded>\r\n                    <AccordionSummary color=\"danger\">\r\n                        ¡Importante lectura!\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Typography\r\n                            level=\"body-sm\"\r\n                            sx={{\r\n                                textAlign: \"justify\",\r\n                                fontSize: 13,\r\n                            }}\r\n                            startDecorator={\r\n                                <PriorityHigh\r\n                                    sx={{ color: \"#f44336\", fontSize: 25 }}\r\n                                />\r\n                            }>\r\n                            El total del carrito es un estimado; recibirá el\r\n                            monto final al concluir su pedido. Agradecemos su\r\n                            comprensión y estamos a su servicio para dudas.\r\n                        </Typography>\r\n                    </AccordionDetails>\r\n                    <Divider />\r\n                </Accordion>\r\n            </AccordionGroup>\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-evenly\",\r\n                    margin: \"0.8em 1em\",\r\n                }}>\r\n                <Checkbox\r\n                    label=\"Seleccionar todo\"\r\n                    checked={cartItems.every((item) =>\r\n                        selectedItems.includes(item)\r\n                    )}\r\n                    onChange={() => {\r\n                        const cart = [...cartItems];\r\n                        if (\r\n                            cart.every((item) => selectedItems.includes(item))\r\n                        ) {\r\n                            setSelectedItems([]);\r\n                        } else {\r\n                            setSelectedItems(cart);\r\n                        }\r\n                    }}\r\n                />\r\n\r\n                <Button\r\n                    variant=\"soft\"\r\n                    color=\"danger\"\r\n                    onClick={() => {\r\n                        setModalOpen(true);\r\n                    }}\r\n                    disabled={btnDisabled}>\r\n                    Eliminar\r\n                </Button>\r\n                <DeleteConfirmationModal\r\n                    open={modalOpen}\r\n                    setOpen={setModalOpen}\r\n                    items={selectedItems}\r\n                />\r\n            </div>\r\n            {cartItems.map((item: Item, index: number) => {\r\n                return (\r\n                    <div key={index}>\r\n                        <div\r\n                            style={{\r\n                                display: \"flex\",\r\n                                alignContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"space-evenly\",\r\n                                margin: \"0.8em 1em\",\r\n                            }}>\r\n                            <Checkbox\r\n                                variant=\"outlined\"\r\n                                sx={{ marginRight: 2 }}\r\n                                checked={selectedItems.includes(item)}\r\n                                onChange={() => handleItemChecked(item)}\r\n                            />\r\n                            <Typography flex={1}>\r\n                                {item.quantity} x {item.name}\r\n                            </Typography>\r\n                            <QuantityEdit item={item} />\r\n                            <Typography\r\n                                level=\"body-lg\"\r\n                                textAlign={\"right\"}\r\n                                ml={2}\r\n                                minWidth={30}>\r\n                                {item.price}\r\n                            </Typography>\r\n                        </div>\r\n                        <Divider />\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cuenta;\r\n","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n    Card,\r\n    Drawer,\r\n    ModalClose,\r\n    Box,\r\n    Typography,\r\n    Badge,\r\n    IconButton,\r\n    Button,\r\n} from \"@mui/joy\";\r\nimport { Phone, ShoppingBasket } from \"@mui/icons-material\";\r\n\r\nimport Cuenta from \"../Components/Cuenta.tsx\";\r\n\r\nconst Header = () => {\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n    const { cartItems } = useSelector((state) => state.menu);\r\n    const navigate = useNavigate();\r\n    const handleLogoOnClick = () => {\r\n        // navigate(\"/\");\r\n    };\r\n    const handleCartIconClick = () => {\r\n        setIsDrawerOpen(true);\r\n    };\r\n    const [ocultarHeader] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Box\r\n                component=\"header\"\r\n                sx={{\r\n                    width: \"100%\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-evenly\",\r\n                    padding: \"0.5rem 0\",\r\n                    position: \"sticky\",\r\n                    top: \"0\",\r\n                    zIndex: 1100,\r\n                    backgroundColor: \"rgba(0,0,0,0.7)\",\r\n                    backdropFilter: \"blur(20px)\",\r\n                }}>\r\n                <Typography\r\n                    level=\"h1\"\r\n                    onClick={handleLogoOnClick}\r\n                    sx={{\r\n                        color: \"#fff\",\r\n                        fontFamily: \"Arial, sans-serif\",\r\n                        fontWeight: \"bold\",\r\n                        textShadow: \"2px 2px 4px rgba(0, 0, 0, 0.5)\",\r\n                        letterSpacing: \"0.05em\",\r\n                    }}>\r\n                    La Concheta\r\n                </Typography>\r\n                <IconButton onClick={handleCartIconClick}>\r\n                    <Badge\r\n                        badgeContent={cartItems.length}\r\n                        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n                        showZero\r\n                        sx={{\r\n                            \"& .MuiBadge-badge\": {\r\n                                fontSize: \"0.8rem\",\r\n                                boxShadow: \"0 0 0 2px #c369\",\r\n                                fontWeight: \"bold\",\r\n                                fontFamily: \"Arial, sans-serif\",\r\n                            },\r\n                        }}\r\n                        variant=\"solid\"\r\n                        color=\"warning\"\r\n                        size=\"md\">\r\n                        <ShoppingBasket\r\n                            sx={{\r\n                                color: \"#fff\",\r\n                                border: \"2px solid #2C1F16\",\r\n                                borderRadius: \"50%\",\r\n                                boxShadow: \"0 0 10px rgba(0, 0, 0, 0.5)\",\r\n                            }}\r\n                        />\r\n                    </Badge>\r\n                </IconButton>\r\n                <Drawer\r\n                    anchor=\"right\"\r\n                    color=\"warning\"\r\n                    open={isDrawerOpen}\r\n                    onClose={() => setIsDrawerOpen(false)}\r\n                    size=\"md\">\r\n                    <ModalClose />\r\n                    {cartItems.length > 0 ? (\r\n                        <Cuenta />\r\n                    ) : (\r\n                        <>\r\n                            <Card\r\n                                variant=\"soft\"\r\n                                color=\"warning\"\r\n                                sx={{\r\n                                    p: 2,\r\n                                    flexGrow: \"1\",\r\n                                    justifyContent: \"center\",\r\n                                    alignContent: \"center\",\r\n                                    gap: \"2rem\",\r\n                                }}>\r\n                                <Typography level=\"title-lg\" align=\"center\">\r\n                                    Tu carrito está vacío\r\n                                </Typography>\r\n                                <Typography\r\n                                    level=\"body-md\"\r\n                                    sx={{\r\n                                        textAlign: \"center\",\r\n                                    }}>\r\n                                    Para continuar, añade tus platos favoritos\r\n                                    al carrito desde nuestro menú.\r\n                                </Typography>\r\n                                <Button\r\n                                    variant=\"solid\"\r\n                                    color=\"warning\"\r\n                                    sx={{\r\n                                        display: \"block\",\r\n                                        p: \"auto\",\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        setIsDrawerOpen(false);\r\n                                        !window.location.hash.startsWith(\r\n                                            \"#/carta/\"\r\n                                        ) &&\r\n                                            navigate(\r\n                                                \"/carta/Entrantes%20Calientes\"\r\n                                            );\r\n                                    }}>\r\n                                    <Typography\r\n                                        color=\"#fff\"\r\n                                        level=\"body-lg\"\r\n                                        fontWeight=\"bold\">\r\n                                        Añadir platos\r\n                                    </Typography>\r\n                                </Button>\r\n                            </Card>\r\n                        </>\r\n                    )}\r\n                </Drawer>\r\n            </Box>\r\n            <Box\r\n                variant=\"plain\"\r\n                sx={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-evenly\",\r\n                    position: \"sticky\",\r\n                    top: \"4em\",\r\n                    zIndex: 1000,\r\n                    p: \".5em\",\r\n                    backdropFilter: \"blur(20px)\",\r\n                    transform: ocultarHeader\r\n                        ? \"translateY(-100%)\"\r\n                        : \"translateY(0%)\",\r\n                    transition:\r\n                        \"transform 0.2s cubic-bezier(0.22, 0.61, 0.36, 1)\",\r\n                }}>\r\n                <Typography\r\n                    level=\"title-lg\"\r\n                    sx={{ textAlign: \"center\", textWrap: \"balance \" }}>\r\n                    ¿Te gustaría reservar una mesa?\r\n                </Typography>\r\n                <Button\r\n                    component=\"a\"\r\n                    href=\"tel:962121602\"\r\n                    variant=\"outlined\"\r\n                    color=\"warning\"\r\n                    startDecorator={<Phone sx={{ color: \"#2C1F16\" }} />}>\r\n                    <Typography>LLámanos!</Typography>\r\n                </Button>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\nexport default Header;\r\n"],"names":["_ref","open","setOpen","items","dispatch","useDispatch","_jsx","Modal","children","_jsxs","ModalDialog","variant","role","DialogTitle","WarningRounded","Divider","DialogContent","map","item","Typography","fontSize","quantity","name","DialogActions","Button","color","onClick","removeAllFromCart","QuantityEdit","style","display","gap","flexDirection","alignContent","alignItems","IconButton","removeItemFromCart","Remove","level","sx","textAlign","addItemToCart","Add","Cuenta","modalOpen","setModalOpen","useState","btnDisabled","setBtnDisabled","selectedItems","setSelectedItems","cartItems","useSelector","state","menu","total","Array","isArray","reduce","priceMatch","price","match","parseFloat","useEffect","length","marginTop","justifyContent","marginBottom","alignSelf","fontWeight","Receipt","Chip","size","AccordionGroup","transition","concat","accordionClasses","root","paddingBottom","background","expanded","bgcolor","borderRadius","borderBottom","borderColor","boxShadow","Accordion","m","defaultExpanded","AccordionSummary","AccordionDetails","startDecorator","PriorityHigh","margin","Checkbox","label","checked","every","includes","onChange","cart","disabled","DeleteConfirmationModal","index","marginRight","some","selectedItem","prevItems","filter","prevItem","handleItemChecked","flex","ml","minWidth","Header","isDrawerOpen","setIsDrawerOpen","navigate","useNavigate","ocultarHeader","_Fragment","Box","component","width","padding","position","top","zIndex","backgroundColor","backdropFilter","handleLogoOnClick","fontFamily","textShadow","letterSpacing","handleCartIconClick","Badge","badgeContent","anchorOrigin","vertical","horizontal","showZero","ShoppingBasket","border","Drawer","anchor","onClose","ModalClose","Card","p","flexGrow","align","window","location","hash","startsWith","transform","textWrap","href","Phone"],"sourceRoot":""}