{"version":3,"file":"static/js/53.ddb47659.chunk.js","mappings":"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","sources":["../node_modules/@mui/base/ClickAwayListener/ClickAwayListener.js","../node_modules/@mui/joy/Snackbar/snackbarClasses.js","../node_modules/@mui/joy/Snackbar/Snackbar.js","../node_modules/@mui/base/useSnackbar/useSnackbar.js","../node_modules/@mui/icons-material/esm/InfoOutlined.js","pages/LoginPage.jsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, exactProp, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\n\n// TODO: return `EventHandlerName extends `on${infer EventName}` ? Lowercase<EventName> : never` once generatePropTypes runs with TS 4.1\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n *\n * Demos:\n *\n * - [Click-Away Listener](https://mui.com/base-ui/react-click-away-listener/)\n *\n * API:\n *\n * - [ClickAwayListener API](https://mui.com/base-ui/react-click-away-listener/components-api/#click-away-listener)\n */\nfunction ClickAwayListener(props) {\n  const {\n    children,\n    disableReactTree = false,\n    mouseEvent = 'onClick',\n    onClickAway,\n    touchEvent = 'onTouchEnd'\n  } = props;\n  const movedRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  React.useEffect(() => {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(() => {\n      activatedRef.current = true;\n    }, 0);\n    return () => {\n      activatedRef.current = false;\n    };\n  }, []);\n  const handleRef = useForkRef(\n  // @ts-expect-error TODO upstream fix\n  children.ref, nodeRef);\n\n  // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n  const handleClickAway = useEventCallback(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current);\n\n    // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n    if (!activatedRef.current || !nodeRef.current || 'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    }\n\n    // Do not act if user performed touchmove\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n    let insideDOM;\n\n    // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target) || nodeRef.current.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target);\n    }\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  });\n\n  // Keep track of mouse/touch events that bubbled up through the portal.\n  const createHandleSynthetic = handlerName => event => {\n    syntheticEventRef.current = true;\n    const childrenPropsHandler = children.props[handlerName];\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n  const childrenProps = {\n    ref: handleRef\n  };\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n  React.useEffect(() => {\n    if (touchEvent !== false) {\n      const mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      const doc = ownerDocument(nodeRef.current);\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n  React.useEffect(() => {\n    if (mouseEvent !== false) {\n      const mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return () => {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(children, childrenProps)\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   * @default false\n   */\n  disableReactTree: PropTypes.bool,\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   * @default 'onClick'\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   * @default 'onTouchEnd'\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\nexport { ClickAwayListener };","import { generateUtilityClass, generateUtilityClasses } from '../className';\nexport function getSnackbarUtilityClass(slot) {\n  return generateUtilityClass('MuiSnackbar', slot);\n}\nconst snackbarClasses = generateUtilityClasses('MuiSnackbar', ['root', 'anchorOriginTopCenter', 'anchorOriginBottomCenter', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'colorPrimary', 'colorDanger', 'colorNeutral', 'colorSuccess', 'colorWarning', 'endDecorator', 'sizeSm', 'sizeMd', 'sizeLg', 'startDecorator', 'variantPlain', 'variantOutlined', 'variantSoft', 'variantSolid']);\nexport default snackbarClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"animationDuration\", \"autoHideDuration\", \"color\", \"children\", \"className\", \"component\", \"disableWindowBlurListener\", \"endDecorator\", \"invertedColors\", \"onBlur\", \"onClose\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"onUnmount\", \"open\", \"resumeHideDuration\", \"size\", \"slots\", \"slotProps\", \"startDecorator\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { ClickAwayListener } from '@mui/base/ClickAwayListener';\nimport { useSnackbar } from '@mui/base/useSnackbar';\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nimport { keyframes } from '@mui/system';\nimport useSlot from '../utils/useSlot';\nimport styled from '../styles/styled';\nimport { useThemeProps } from '../styles';\nimport { resolveSxValue } from '../styles/styleUtils';\nimport { applySolidInversion, applySoftInversion } from '../colorInversion';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    size,\n    anchorOrigin\n  } = ownerState;\n  const slots = {\n    root: ['root', size && `size${capitalize(size)}`, color && `color${capitalize(color)}`, variant && `variant${capitalize(variant)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`],\n    startDecorator: ['startDecorator'],\n    endDecorator: ['endDecorator']\n  };\n  return composeClasses(slots, getSnackbarUtilityClass, {});\n};\nconst enterAnimation = keyframes(_t || (_t = _`\n  0% {\n    transform: translateX(var(--Snackbar-translateX, 0px)) translateY(calc(var(--_Snackbar-anchorBottom, 1) * 100%));\n    opacity: 0;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    transform: translateX(var(--Snackbar-translateX, 0px)) translateY(0);\n  }\n`));\nconst exitAnimation = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(var(--Snackbar-translateX, 0px)) translateY(0);\n    opacity: 1;\n  }\n  100% {\n    transform: translateX(var(--Snackbar-translateX, 0px)) translateY(calc(var(--_Snackbar-anchorBottom, 1) * 100%));\n    opacity: 0;\n  }\n`));\nconst SnackbarRoot = styled('div', {\n  name: 'JoySnackbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme,\n  ownerState\n}) => {\n  var _ownerState$anchorOri, _ownerState$anchorOri2, _ownerState$anchorOri3, _ownerState$anchorOri4, _ownerState$anchorOri5, _ownerState$anchorOri6, _theme$variants;\n  const {\n    p,\n    padding,\n    borderRadius\n  } = resolveSxValue({\n    theme,\n    ownerState\n  }, ['p', 'padding', 'borderRadius']);\n  return [_extends({\n    '--Snackbar-radius': theme.vars.radius.sm,\n    '--Snackbar-decoratorChildRadius': 'max((var(--Snackbar-radius) - var(--variant-borderWidth, 0px)) - var(--Snackbar-padding), min(var(--Snackbar-padding) + var(--variant-borderWidth, 0px), var(--Snackbar-radius) / 2))',\n    '--Button-minHeight': 'var(--Snackbar-decoratorChildHeight)',\n    '--IconButton-size': 'var(--Snackbar-decoratorChildHeight)',\n    '--Button-radius': 'var(--Snackbar-decoratorChildRadius)',\n    '--IconButton-radius': 'var(--Snackbar-decoratorChildRadius)',\n    '--Icon-color': 'currentColor'\n  }, ownerState.size === 'sm' && {\n    '--Snackbar-padding': '0.75rem',\n    '--Snackbar-inset': '0.5rem',\n    '--Snackbar-decoratorChildHeight': '1.5rem',\n    '--Icon-fontSize': theme.vars.fontSize.xl,\n    gap: '0.5rem'\n  }, ownerState.size === 'md' && {\n    '--Snackbar-padding': '1rem',\n    '--Snackbar-inset': '0.75rem',\n    // the spacing between Snackbar and the viewport\n    '--Snackbar-decoratorChildHeight': '2rem',\n    '--Icon-fontSize': theme.vars.fontSize.xl,\n    gap: '0.625rem'\n  }, ownerState.size === 'lg' && {\n    '--Snackbar-padding': '1.25rem',\n    '--Snackbar-inset': '1rem',\n    '--Snackbar-decoratorChildHeight': '2.375rem',\n    '--Icon-fontSize': theme.vars.fontSize.xl2,\n    gap: '0.875rem'\n  }, {\n    zIndex: theme.vars.zIndex.snackbar,\n    position: 'fixed',\n    display: 'flex',\n    alignItems: 'center',\n    minWidth: 300,\n    top: ((_ownerState$anchorOri = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri.vertical) === 'top' ? 'var(--Snackbar-inset)' : undefined,\n    left: ((_ownerState$anchorOri2 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri2.horizontal) === 'left' ? 'var(--Snackbar-inset)' : undefined,\n    bottom: ((_ownerState$anchorOri3 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri3.vertical) === 'bottom' ? 'var(--Snackbar-inset)' : undefined,\n    right: ((_ownerState$anchorOri4 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri4.horizontal) === 'right' ? 'var(--Snackbar-inset)' : undefined\n  }, ((_ownerState$anchorOri5 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri5.horizontal) === 'center' && {\n    '--Snackbar-translateX': '-50%',\n    left: '50%',\n    transform: 'translateX(var(--Snackbar-translateX))'\n  }, ((_ownerState$anchorOri6 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri6.vertical) === 'top' && {\n    '--_Snackbar-anchorBottom': '-1'\n  }, {\n    animation: `${enterAnimation} ${ownerState.animationDuration}ms forwards`\n  }, !ownerState.open && {\n    animationName: exitAnimation\n  }, {\n    boxShadow: theme.vars.shadow.lg,\n    backgroundColor: theme.vars.palette.background.surface,\n    padding: `var(--Snackbar-padding)`,\n    borderRadius: 'var(--Snackbar-radius)'\n  }, theme.typography[`body-${{\n    sm: 'xs',\n    md: 'sm',\n    lg: 'md'\n  }[ownerState.size]}`], ownerState.variant === 'solid' && ownerState.color && ownerState.invertedColors && applySolidInversion(ownerState.color)(theme), ownerState.variant === 'soft' && ownerState.color && ownerState.invertedColors && applySoftInversion(ownerState.color)(theme), (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]), p !== undefined && {\n    '--Snackbar-padding': p\n  }, padding !== undefined && {\n    '--Snackbar-padding': padding\n  }, borderRadius !== undefined && {\n    '--Snackbar-radius': borderRadius\n  }];\n});\nconst SnackbarStartDecorator = styled('span', {\n  name: 'JoySnackbar',\n  slot: 'StartDecorator',\n  overridesResolver: (props, styles) => styles.startDecorator\n})({\n  display: 'inherit',\n  flex: 'none'\n});\nconst SnackbarEndDecorator = styled('span', {\n  name: 'JoySnackbar',\n  slot: 'EndDecorator',\n  overridesResolver: (props, styles) => styles.endDecorator\n})({\n  display: 'inherit',\n  flex: 'none',\n  marginLeft: 'auto'\n});\nconst defaultAnchorOrigin = {\n  vertical: 'bottom',\n  horizontal: 'right'\n};\n\n/**\n *\n * Demos:\n *\n * - [Snackbar](https://mui.com/joy-ui/react-snackbar/)\n *\n * API:\n *\n * - [Snackbar API](https://mui.com/joy-ui/api/snackbar/)\n */\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoySnackbar'\n  });\n  const {\n      anchorOrigin = defaultAnchorOrigin,\n      animationDuration = 300,\n      autoHideDuration = null,\n      color = 'neutral',\n      children,\n      className,\n      component,\n      disableWindowBlurListener = false,\n      endDecorator,\n      invertedColors = false,\n      onUnmount,\n      open,\n      size = 'md',\n      slots = {},\n      slotProps,\n      startDecorator,\n      variant = 'outlined'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  // For animation\n  const [exited, setExited] = React.useState(true);\n\n  // `exiting` is a state for preventing click away event during exiting\n  // because there is a case where the Snackbar is exiting and the user open a Snackbar again.\n  // Without this state, the snack will open and close immediately since click away is called immediately after the click event.\n  const [exiting, setExiting] = React.useState(false);\n\n  // To call a function when the component is about to be unmounted.\n  // Useful for preserving content in the Snackbar when undergoing exit animation.\n  const unmountRef = React.useRef(onUnmount);\n  unmountRef.current = onUnmount;\n  React.useEffect(() => {\n    if (open) {\n      setExiting(false);\n      setExited(false);\n    } else {\n      setExiting(true);\n      const timer = setTimeout(() => {\n        var _unmountRef$current;\n        setExited(true);\n        setExiting(false);\n        (_unmountRef$current = unmountRef.current) == null || _unmountRef$current.call(unmountRef);\n      }, animationDuration);\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n    return undefined;\n  }, [open, animationDuration]);\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    autoHideDuration,\n    color,\n    animationDuration,\n    disableWindowBlurListener,\n    invertedColors,\n    size,\n    variant\n  });\n  delete ownerState.onUnmount; // `on*` are considered as event handler which does not work with ClickAwayListener\n\n  const classes = useUtilityClasses(ownerState);\n  const {\n    getRootProps,\n    onClickAway\n  } = useSnackbar(ownerState);\n  const handleClickAway = event => {\n    if (!exiting) {\n      onClickAway(event);\n    }\n  };\n  const externalForwardedProps = _extends({}, other, {\n    component,\n    slots,\n    slotProps\n  });\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: clsx(classes.root, className),\n    elementType: SnackbarRoot,\n    externalForwardedProps,\n    getSlotProps: getRootProps,\n    ownerState\n  });\n  const [SlotStartDecorator, startDecoratorProps] = useSlot('startDecorator', {\n    className: classes.startDecorator,\n    elementType: SnackbarStartDecorator,\n    externalForwardedProps,\n    ownerState\n  });\n  const [SlotEndDecorator, endDecoratorProps] = useSlot('endDecorator', {\n    className: classes.endDecorator,\n    elementType: SnackbarEndDecorator,\n    externalForwardedProps,\n    ownerState\n  });\n  const SlotClickAway = slots.clickAway || ClickAwayListener;\n\n  // So we only render active snackbars.\n  if (!open && exited) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(SlotClickAway, _extends({\n    onClickAway: handleClickAway\n  }, typeof (slotProps == null ? void 0 : slotProps.clickAway) === 'function' ? slotProps.clickAway(ownerState) : slotProps == null ? void 0 : slotProps.clickAway, {\n    children: /*#__PURE__*/_jsxs(SlotRoot, _extends({}, rootProps, {\n      children: [startDecorator && /*#__PURE__*/_jsx(SlotStartDecorator, _extends({}, startDecoratorProps, {\n        children: startDecorator\n      })), children, endDecorator && /*#__PURE__*/_jsx(SlotEndDecorator, _extends({}, endDecoratorProps, {\n        children: endDecorator\n      }))]\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The anchor of the `Snackbar`.\n   * On smaller screens, the component grows to occupy all the available width,\n   * the horizontal alignment is ignored.\n   * @default { vertical: 'bottom', horizontal: 'right' }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The duration of the animation in milliseconds. This value is used to control\n   * the length of time it takes for an animation to complete one cycle. It is also\n   * utilized for delaying the unmount of the component.\n   * Provide this value if you have your own animation so that we can precisely\n   * time the component's unmount to match your custom animation.\n   * @default 300\n   */\n  animationDuration: PropTypes.number,\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes.oneOf(['danger', 'neutral', 'primary', 'success', 'warning']),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n  /**\n   * Element placed after the children.\n   */\n  endDecorator: PropTypes.node,\n  /**\n   * If `true`, the children with an implicit color prop invert their colors to match the component's variant and color.\n   * @default false\n   */\n  invertedColors: PropTypes.bool,\n  /**\n   * When displaying multiple consecutive snackbars using a single parent-rendered\n   * `<Snackbar/>`, add the `key` prop to ensure independent treatment of each message.\n   * For instance, use `<Snackbar key={message} />`. Otherwise, messages might update\n   * in place, and features like `autoHideDuration` could be affected.\n   */\n  key: () => null,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n  /**\n   * A callback fired when the component is about to be unmounted.\n   */\n  onUnmount: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n  /**\n   * The size of the component.\n   * @default 'md'\n   */\n  size: PropTypes.oneOf(['sm', 'md', 'lg']),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    clickAway: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n      children: PropTypes.element.isRequired,\n      disableReactTree: PropTypes.bool,\n      mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n      onClickAway: PropTypes.func.isRequired,\n      touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n    })]),\n    endDecorator: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    startDecorator: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    clickAway: PropTypes.elementType,\n    endDecorator: PropTypes.elementType,\n    root: PropTypes.elementType,\n    startDecorator: PropTypes.elementType\n  }),\n  /**\n   * Element placed before the children.\n   */\n  startDecorator: PropTypes.node,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The [global variant](https://mui.com/joy-ui/main-features/global-variants/) to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid'])\n} : void 0;\nexport default Snackbar;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\n/**\n * The basic building block for creating custom snackbar.\n *\n * Demos:\n *\n * - [Snackbar](https://mui.com/base-ui/react-snackbar/#hook)\n *\n * API:\n *\n * - [useSnackbar API](https://mui.com/base-ui/react-snackbar/hooks-api/#use-snackbar)\n */\nexport function useSnackbar(parameters = {}) {\n  const {\n    autoHideDuration = null,\n    disableWindowBlurListener = false,\n    onClose,\n    open,\n    resumeHideDuration\n  } = parameters;\n  const timerAutoHide = React.useRef();\n  React.useEffect(() => {\n    if (!open) {\n      return undefined;\n    }\n\n    /**\n     * @param {KeyboardEvent} nativeEvent\n     */\n    function handleKeyDown(nativeEvent) {\n      if (!nativeEvent.defaultPrevented) {\n        // IE11, Edge (prior to using Blink?) use 'Esc'\n        if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n          // not calling `preventDefault` since we don't know if people may ignore this event e.g. a permanently open snackbar\n          onClose == null || onClose(nativeEvent, 'escapeKeyDown');\n        }\n      }\n    }\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [open, onClose]);\n  const handleClose = useEventCallback((event, reason) => {\n    onClose == null || onClose(event, reason);\n  });\n  const setAutoHideTimer = useEventCallback(autoHideDurationParam => {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(() => {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(() => {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n    return () => {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]);\n  const handleClickAway = event => {\n    onClose == null || onClose(event, 'clickaway');\n  };\n\n  // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n  const handlePause = () => {\n    clearTimeout(timerAutoHide.current);\n  };\n\n  // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n  const handleResume = React.useCallback(() => {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n  const createHandleBlur = otherHandlers => event => {\n    const onBlurCallback = otherHandlers.onBlur;\n    onBlurCallback == null || onBlurCallback(event);\n    handleResume();\n  };\n  const createHandleFocus = otherHandlers => event => {\n    const onFocusCallback = otherHandlers.onFocus;\n    onFocusCallback == null || onFocusCallback(event);\n    handlePause();\n  };\n  const createMouseEnter = otherHandlers => event => {\n    const onMouseEnterCallback = otherHandlers.onMouseEnter;\n    onMouseEnterCallback == null || onMouseEnterCallback(event);\n    handlePause();\n  };\n  const createMouseLeave = otherHandlers => event => {\n    const onMouseLeaveCallback = otherHandlers.onMouseLeave;\n    onMouseLeaveCallback == null || onMouseLeaveCallback(event);\n    handleResume();\n  };\n  React.useEffect(() => {\n    // TODO: window global should be refactored here\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return () => {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]);\n  const getRootProps = (externalProps = {}) => {\n    const externalEventHandlers = _extends({}, extractEventHandlers(parameters), extractEventHandlers(externalProps));\n    return _extends({\n      // ClickAwayListener adds an `onClick` prop which results in the alert not being announced.\n      // See https://github.com/mui/material-ui/issues/29080\n      role: 'presentation'\n    }, externalProps, externalEventHandlers, {\n      onBlur: createHandleBlur(externalEventHandlers),\n      onFocus: createHandleFocus(externalEventHandlers),\n      onMouseEnter: createMouseEnter(externalEventHandlers),\n      onMouseLeave: createMouseLeave(externalEventHandlers)\n    });\n  };\n  return {\n    getRootProps,\n    onClickAway: handleClickAway\n  };\n}","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'InfoOutlined');","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Box, Input, Button, Typography } from \"@mui/joy\";\r\nimport { setLogginIn } from \"../features/menuSlice.js\";\r\nimport { Snackbar } from \"@mui/joy\";\r\nimport { InfoOutlined } from \"@mui/icons-material\";\r\nimport { useDocumentTitle } from \"../hooks/useDocumentTitle.js\";\r\n\r\nconst LoginPage = () => {\r\n    useDocumentTitle(\"LaConcheta - Inicio Sesión\");\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [snackBarOpen, setSnackBarOpen] = useState(false);\r\n\r\n    const handleLogin = (event) => {\r\n        event.preventDefault();\r\n        if (email === \"admin@admin.com\" && password === \"laaconcheta\") {\r\n            localStorage.setItem(\r\n                \"user\",\r\n                JSON.stringify({ email, timestamp: new Date().getTime() })\r\n            );\r\n            dispatch(setLogginIn(true));\r\n            navigate(\"/\");\r\n        } else {\r\n            setSnackBarOpen(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Snackbar\r\n                autoHideDuration={3000}\r\n                color=\"danger\"\r\n                variant=\"solid\"\r\n                open={snackBarOpen}\r\n                anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}>\r\n                Usuario no encontrado\r\n            </Snackbar>\r\n            <Box\r\n                component=\"form\"\r\n                onSubmit={handleLogin}\r\n                sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignSelf: \"center\",\r\n                    alignItems: \"center\",\r\n                    mt: \"9em\",\r\n                    width: \"100%\",\r\n                    height: \"100vh\",\r\n                    gap: 2,\r\n                    backgroundColor: \"transparent\",\r\n                }}>\r\n                <Typography\r\n                    level=\"h4\"\r\n                    variant=\"solid\"\r\n                    color=\"warning\"\r\n                    sx={{ p: \".5em 1em\", textWrap: \"nowrap\" }}>\r\n                    {\" \"}\r\n                    Iniciar sesión\r\n                </Typography>\r\n                <Input\r\n                    autoComplete=\"true\"\r\n                    name=\"email\"\r\n                    label=\"Correo electrónico\"\r\n                    placeholder=\"Correo@electrónico.com\"\r\n                    variant=\"outlined\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                />\r\n                <Input\r\n                    autoComplete=\"current-password\"\r\n                    name=\"password\"\r\n                    label=\"Contraseña\"\r\n                    variant=\"outlined\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                />\r\n                <Typography\r\n                    startDecorator={<InfoOutlined />}\r\n                    level=\"body-md\"\r\n                    variant=\"solid\"\r\n                    color=\"warning\">\r\n                    Solo miembros VIP de LaConcheta\r\n                </Typography>\r\n                <Button type=\"submit\" variant=\"solid\" color=\"neutral\">\r\n                    Iniciar sesión\r\n                </Button>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\nexport default LoginPage;\r\n"],"names":["mapEventPropToEvent","eventProp","substring","toLowerCase","ClickAwayListener","props","children","disableReactTree","mouseEvent","onClickAway","touchEvent","movedRef","React","nodeRef","activatedRef","syntheticEventRef","setTimeout","current","handleRef","useForkRef","ref","handleClickAway","useEventCallback","event","insideReactTree","doc","ownerDocument","documentElement","clientWidth","clientX","clientHeight","clientY","clickedRootScrollbar","insideDOM","composedPath","indexOf","contains","target","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","handleTouchMove","addEventListener","removeEventListener","mappedMouseEvent","_jsx","getSnackbarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_templateObject","_templateObject2","_excluded","_t","_t2","enterAnimation","keyframes","_taggedTemplateLiteral","exitAnimation","SnackbarRoot","styled","name","overridesResolver","styles","root","_ref","theme","ownerState","_ownerState$anchorOri","_ownerState$anchorOri2","_ownerState$anchorOri3","_ownerState$anchorOri4","_ownerState$anchorOri5","_ownerState$anchorOri6","_theme$variants","p","padding","borderRadius","resolveSxValue","_extends","vars","radius","sm","size","fontSize","xl","gap","xl2","zIndex","snackbar","position","display","alignItems","minWidth","top","anchorOrigin","vertical","undefined","left","horizontal","bottom","right","transform","animation","concat","animationDuration","open","animationName","boxShadow","shadow","lg","backgroundColor","palette","background","surface","typography","md","variant","color","invertedColors","applySolidInversion","applySoftInversion","variants","SnackbarStartDecorator","startDecorator","flex","SnackbarEndDecorator","endDecorator","marginLeft","defaultAnchorOrigin","Snackbar","inProps","useThemeProps","autoHideDuration","className","component","disableWindowBlurListener","onUnmount","slots","slotProps","other","_objectWithoutPropertiesLoose","exited","setExited","exiting","setExiting","unmountRef","timer","_unmountRef$current","call","clearTimeout","classes","capitalize","composeClasses","useUtilityClasses","getRootProps","parameters","arguments","length","onClose","resumeHideDuration","timerAutoHide","document","handleKeyDown","nativeEvent","defaultPrevented","key","handleClose","reason","setAutoHideTimer","autoHideDurationParam","handlePause","handleResume","createHandleFocus","otherHandlers","onFocusCallback","onFocus","createMouseEnter","onMouseEnterCallback","onMouseEnter","createMouseLeave","onMouseLeaveCallback","onMouseLeave","window","externalProps","externalEventHandlers","extractEventHandlers","role","onBlur","onBlurCallback","useSnackbar","externalForwardedProps","SlotRoot","rootProps","useSlot","clsx","elementType","getSlotProps","SlotStartDecorator","startDecoratorProps","SlotEndDecorator","endDecoratorProps","SlotClickAway","clickAway","_jsxs","createSvgIcon","d","LoginPage","useDocumentTitle","dispatch","useDispatch","navigate","useNavigate","email","setEmail","useState","password","setPassword","snackBarOpen","setSnackBarOpen","_Fragment","Box","onSubmit","preventDefault","localStorage","setItem","JSON","stringify","timestamp","Date","getTime","setLogginIn","sx","flexDirection","alignSelf","mt","width","height","Typography","level","textWrap","Input","autoComplete","label","placeholder","value","onChange","e","required","type","InfoOutlined","Button"],"sourceRoot":""}