{"version":3,"file":"static/js/614.d1df2160.chunk.js","mappings":"sIAEO,MAAMA,EAAoBC,KAC7BC,EAAAA,EAAAA,YAAU,KACNC,SAASF,MAAQA,CAAK,GACvB,CAACA,GAAO,C,8LCAf,MA+BA,EA/BiBG,IAAe,IAAd,KAAEC,GAAMD,EACtB,MAAME,GAAWC,EAAAA,EAAAA,MACjB,OACIC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACDC,QAAQ,WAERC,GAAI,CAGAC,eAAgB,aAChBC,OAAQ,UACRC,EAAG,OACLC,SAAA,EACFC,EAAAA,EAAAA,KAACC,EAAAA,GAAU,CAACC,MAAM,KAAIH,SAAEV,EAAKc,QAC7BH,EAAAA,EAAAA,KAACI,EAAAA,EAAW,CAAAL,UACRC,EAAAA,EAAAA,KAACC,EAAAA,GAAU,CAACC,MAAM,UAASH,SAAEV,EAAKgB,iBAEtCb,EAAAA,EAAAA,MAACY,EAAAA,EAAW,CAACE,YAAY,aAAYP,SAAA,EACjCP,EAAAA,EAAAA,MAACS,EAAAA,GAAU,CAACC,MAAM,UAASH,SAAA,CAAC,UAEvB,IAAMV,EAAKkB,UAEhBP,EAAAA,EAAAA,KAACQ,EAAAA,GAAU,CACP,aAAW,cACXC,QAASA,IAAMnB,GAASoB,EAAAA,EAAAA,IAAcrB,IAAOU,UAC7CC,EAAAA,EAAAA,KAACW,EAAAA,EAAG,WApBPtB,EAAKc,KAuBP,E,cC2Cf,QArEA,YACInB,EAAAA,EAAAA,GAAiB,iCACjB,MAAM,eAAE4B,IAAmBC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,OAClDC,GAAWC,EAAAA,EAAAA,OACX,aAAEC,IAAiBC,EAAAA,EAAAA,OAClBC,EAAOC,IAAYC,EAAAA,EAAAA,UAASJ,GAQnC,OACIlB,EAAAA,EAAAA,KAAAuB,EAAAA,SAAA,CAAAxB,UACIP,EAAAA,EAAAA,MAACgC,EAAAA,EAAI,CACD7B,GAAI,CACA8B,SAAU,QAEd,aAAW,kBACXnB,YAAY,WACZoB,SAbYC,CAACC,EAAOC,KAC5Bb,EAAS,eAADc,OAAgBC,OAAOC,KAAKpB,GAAgBiB,KACpDR,EAASQ,EAAS,EAYVI,aAAcF,OAAOC,KAAKpB,GAAgBsB,QAAQd,GAAOrB,SAAA,EACzDC,EAAAA,EAAAA,KAACmC,EAAAA,EACG,CACAC,QAAS,EACTzC,GAAI,CACA0C,SAAU,SACVC,IAAK,EACLC,QAAS,mBACTC,aAAc,MACd,iBAAkB,CAEdC,MAAO,QACPC,OAAQ,QACRF,aAAc,MACdG,OAAQ,MACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,WAAY,UAElBhD,SACDgC,OAAOiB,QAAQpC,GAAgBqC,KAAI,CAAA7D,EAAQ8D,KAAK,IAAXC,GAAI/D,EAAA,OACtCY,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAEAzD,GAAI,CACA0D,UAAW,OACX,iBAAkB,CACdC,MAAO,eACPC,WAAY,SAElBxD,SACDoD,GARID,EASH,MAGbnB,OAAOiB,QAAQpC,GAAgBqC,KAAI,CAAAO,EAAeN,KAAK,IAAlBC,EAAK/B,GAAMoC,EAAA,OAC7CxD,EAAAA,EAAAA,KAACyD,EAAAA,EAAQ,CAAarC,MAAO8B,EAAMnD,SAC9BqB,EAAMsC,KAAKT,KAAI,CAAC5D,EAAM8D,KACnBnD,EAAAA,EAAAA,KAAC2D,EAAQ,CAACtE,KAAMA,GAAW8D,MAFpBD,EAIJ,QAK/B,C","sources":["hooks/useDocumentTitle.js","Components/ItemCard.jsx","pages/ProductsPage.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\n\r\nexport const useDocumentTitle = (title) => {\r\n    useEffect(() => {\r\n        document.title = title;\r\n    }, [title]);\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\nimport { Typography, Card, CardContent, IconButton } from \"@mui/joy\";\r\nimport { Add } from \"@mui/icons-material\";\r\nimport { addItemToCart } from \"../features/menuSlice\";\r\n\r\nconst ItemCard = ({ item }) => {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <Card\r\n            variant=\"outlined\"\r\n            key={item.name}\r\n            sx={{\r\n                // background:\r\n                //     \"radial-gradient(circle, rgba(235, 194, 94, 0.669) 0%, rgba(58,59,61,1) 100%)\",\r\n                backdropFilter: \"blur(50px)\",\r\n                cursor: \"pointer\",\r\n                m: \"1em\",\r\n            }}>\r\n            <Typography level=\"h3\">{item.name}</Typography>\r\n            <CardContent>\r\n                <Typography level=\"body-lg\">{item.description}</Typography>\r\n            </CardContent>\r\n            <CardContent orientation=\"horizontal\">\r\n                <Typography level=\"body-md\">\r\n                    Precio:\r\n                    {\" \" + item.price}\r\n                </Typography>\r\n                <IconButton\r\n                    aria-label=\"Add to cart\"\r\n                    onClick={() => dispatch(addItemToCart(item))}>\r\n                    <Add />\r\n                </IconButton>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\nexport default ItemCard;\r\n","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Tabs, TabList, Tab, TabPanel } from \"@mui/joy\";\r\nimport ItemCard from \"../Components/ItemCard.jsx\";\r\nimport { useDocumentTitle } from \"../hooks/useDocumentTitle.js\";\r\n\r\nfunction ProductsPage() {\r\n    useDocumentTitle(\"LaConcheta - Carta de la casa\");\r\n    const { menuCategories } = useSelector((state) => state.menu);\r\n    const navigate = useNavigate();\r\n    const { categoryName } = useParams();\r\n    const [value, setValue] = useState(categoryName);\r\n\r\n    // Función para manejar el cambio de pestaña\r\n    const handleTabChange = (event, newValue) => {\r\n        navigate(`/categories/${Object.keys(menuCategories)[newValue]}`);\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tabs\r\n                sx={{\r\n                    maxWidth: \"100%\",\r\n                }}\r\n                aria-label=\"Scrollable tabs\"\r\n                orientation=\"vertical\"\r\n                onChange={handleTabChange}\r\n                defaultValue={Object.keys(menuCategories).indexOf(value)}>\r\n                <TabList\r\n                    // sticky=\"bottom\"\r\n                    tabFlex={1}\r\n                    sx={{\r\n                        position: \"sticky\",\r\n                        top: 0, // Ajusta según sea necesario\r\n                        bgcolor: \"background.paper\",\r\n                        borderRadius: \"8px\", // O '0px' para bordes completamente cuadrados\r\n                        \"& .MuiTab-root\": {\r\n                            // Aplicando estilos a cada Tab individualmente\r\n                            width: \"100px\", // Ajusta según sea necesario para que sea cuadrado\r\n                            height: \"100px\", // Ajusta según sea necesario para que sea cuadrado\r\n                            borderRadius: \"8px\", // O '0px' para bordes completamente cuadrados\r\n                            margin: \"8px\", // Agrega espacio alrededor de las pestañas si es necesario\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                            typography: \"body1\",\r\n                        },\r\n                    }}>\r\n                    {Object.entries(menuCategories).map(([key], index) => (\r\n                        <Tab\r\n                            key={index}\r\n                            sx={{\r\n                                maxHeight: \"60px\",\r\n                                \"&.Mui-selected\": {\r\n                                    color: \"primary.main\",\r\n                                    fontWeight: \"bold\",\r\n                                },\r\n                            }}>\r\n                            {key}\r\n                        </Tab>\r\n                    ))}\r\n                </TabList>\r\n                {Object.entries(menuCategories).map(([key, value], index) => (\r\n                    <TabPanel key={index} value={index}>\r\n                        {value.data.map((item, key) => (\r\n                            <ItemCard item={item} key={key} />\r\n                        ))}\r\n                    </TabPanel>\r\n                ))}\r\n            </Tabs>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductsPage;\r\n"],"names":["useDocumentTitle","title","useEffect","document","_ref","item","dispatch","useDispatch","_jsxs","Card","variant","sx","backdropFilter","cursor","m","children","_jsx","Typography","level","name","CardContent","description","orientation","price","IconButton","onClick","addItemToCart","Add","menuCategories","useSelector","state","menu","navigate","useNavigate","categoryName","useParams","value","setValue","useState","_Fragment","Tabs","maxWidth","onChange","handleTabChange","event","newValue","concat","Object","keys","defaultValue","indexOf","TabList","tabFlex","position","top","bgcolor","borderRadius","width","height","margin","display","justifyContent","alignItems","typography","entries","map","index","key","Tab","maxHeight","color","fontWeight","_ref2","TabPanel","data","ItemCard"],"sourceRoot":""}