{"version":3,"file":"static/js/736.9750a0c1.chunk.js","mappings":"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","sources":["Components/DeleteConfirmationModal.tsx","Components/CuentaHeader.tsx","Components/Cuenta.tsx","utils/utils.ts","Components/Header.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n    Button,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Divider,\r\n    List,\r\n    Modal,\r\n    ModalDialog,\r\n    Typography,\r\n} from \"@mui/joy\";\r\nimport { WarningRounded } from \"@mui/icons-material\";\r\nimport { removeAllFromCart } from \"../features/menuSlice\";\r\n\r\nconst DeleteConfirmationModal = ({\r\n    open,\r\n    setOpen,\r\n    selectedItems,\r\n    setSelectedItems,\r\n}) => {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <Modal open={open}>\r\n            <ModalDialog variant=\"outlined\" role=\"alertdialog\">\r\n                <DialogTitle>\r\n                    <WarningRounded color=\"warning\" />\r\n                    Confirmación\r\n                </DialogTitle>\r\n                <Divider />\r\n                <DialogContent sx={{ overflow: \"visible\" }}>\r\n                    ¿Confirmas que deseas eliminar estos artículos seleccionados\r\n                    del carrito?\r\n                </DialogContent>\r\n                <List sx={{ overflow: \"auto\" }}>\r\n                    {selectedItems.map((item) => (\r\n                        <Typography key={item.id} fontSize={14}>\r\n                            {item.quantity} x {item.name}\r\n                        </Typography>\r\n                    ))}\r\n                </List>\r\n\r\n                <DialogActions>\r\n                    <Button\r\n                        variant=\"solid\"\r\n                        color=\"danger\"\r\n                        onClick={() => {\r\n                            setOpen(false);\r\n                            dispatch(removeAllFromCart(selectedItems));\r\n                            setSelectedItems([]);\r\n                        }}>\r\n                        Eliminar\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"plain\"\r\n                        color=\"neutral\"\r\n                        onClick={() => setOpen(false)}>\r\n                        Cancelar\r\n                    </Button>\r\n                </DialogActions>\r\n            </ModalDialog>\r\n        </Modal>\r\n    );\r\n};\r\nexport default DeleteConfirmationModal;\r\n","import React from \"react\";\r\nimport {\r\n    Chip,\r\n    Accordion,\r\n    AccordionDetails,\r\n    AccordionSummary,\r\n    AccordionGroup,\r\n    accordionClasses,\r\n    Typography,\r\n    Divider,\r\n} from \"@mui/joy\";\r\nimport { PriorityHigh, Receipt } from \"@mui/icons-material\";\r\n\r\nexport default function CuentaHeader({ total }: { total: number }) {\r\n    return (\r\n        <>\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    gap: 5,\r\n                    alignContent: \"center\",\r\n                    justifyContent: \"center \",\r\n                    alignItems: \"center\",\r\n                    marginBottom: \"1em\",\r\n                }}>\r\n                <Typography\r\n                    level=\"h1\"\r\n                    sx={{\r\n                        alignSelf: \"center\",\r\n                        fontWeight: 600,\r\n                        color: \"primary\",\r\n                    }}>\r\n                    Cuenta\r\n                </Typography>\r\n                <Receipt color=\"warning\" sx={{ fontSize: 50 }} />\r\n            </div>\r\n            <Divider sx={{ \"--Divider-childPosition\": \"80%\" }}>\r\n                <Chip color=\"warning\" size=\"lg\">\r\n                    Total: {total} {\" €\"}\r\n                </Chip>\r\n            </Divider>\r\n            <AccordionGroup\r\n                size=\"md\"\r\n                transition=\"0.2s ease\"\r\n                sx={{\r\n                    [`& .${accordionClasses.root}`]: {\r\n                        marginTop: \"0.5rem\",\r\n                        transition: \"0.2s ease\",\r\n                        '& button:not([aria-expanded=\"true\"])': {\r\n                            transition: \"0.2s ease\",\r\n                            paddingBottom: \"0.625rem\",\r\n                        },\r\n                        \"& button:hover\": {\r\n                            background: \"transparent\",\r\n                        },\r\n                    },\r\n                    [`& .${accordionClasses.root}.${accordionClasses.expanded}`]:\r\n                        {\r\n                            bgcolor: \"background.level1\",\r\n                            borderRadius: \"md\",\r\n                            borderBottom: \"1px solid\",\r\n                            borderColor: \"background.level2\",\r\n                            boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\",\r\n                        },\r\n                }}>\r\n                <Accordion sx={{ m: 1 }} defaultExpanded>\r\n                    <AccordionSummary color=\"warning\">\r\n                        ¡Importante lectura!\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Typography\r\n                            level=\"body-sm\"\r\n                            sx={{\r\n                                textAlign: \"justify\",\r\n                                fontSize: 13,\r\n                            }}\r\n                            startDecorator={\r\n                                <PriorityHigh\r\n                                    color=\"warning\"\r\n                                    sx={{ fontSize: 25 }}\r\n                                />\r\n                            }>\r\n                            El total del carrito es orientativo; el monto\r\n                            definitivo le será presentado por el camarero o el\r\n                            encargado al solicitar la cuenta. Agradecemos su\r\n                            comprensión y estamos a su servicio para dudas.\r\n                        </Typography>\r\n                    </AccordionDetails>\r\n                    <Divider />\r\n                </Accordion>\r\n            </AccordionGroup>\r\n        </>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Divider, Typography, Checkbox, Button, IconButton } from \"@mui/joy\";\r\n\r\nimport { calculateTotal } from \"../utils/utils.ts\";\r\nimport { Item, State } from \"../types.ts\";\r\nimport DeleteConfirmationModal from \"./DeleteConfirmationModal.tsx\";\r\nimport CuentaHeader from \"./CuentaHeader.tsx\";\r\nimport { addItemToCart, removeItemFromCart } from \"../features/menuSlice.js\";\r\nimport { Add, Remove } from \"@mui/icons-material\";\r\n\r\nconst Cuenta = () => {\r\n    const dispatch = useDispatch();\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [btnDisabled, setBtnDisabled] = useState(true);\r\n    const [selectedItems, setSelectedItems] = useState<Item[]>([]);\r\n    const { cartItems } = useSelector((state: State) => state.menu);\r\n    const total: number = calculateTotal(\r\n        selectedItems.length > 0 ? selectedItems : cartItems\r\n    );\r\n\r\n    useEffect(() => {\r\n        setBtnDisabled(selectedItems.length === 0);\r\n    }, [selectedItems, cartItems]);\r\n\r\n    const handleItemChecked = (item: Item) => {\r\n        setSelectedItems((prevItems) => {\r\n            const itemExists = prevItems.some(\r\n                (selectedItem) => selectedItem.id === item.id\r\n            );\r\n            if (itemExists) {\r\n                return prevItems.filter((prevItem) => prevItem.id !== item.id);\r\n            } else {\r\n                return [...prevItems, item];\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                marginTop: \"2em\",\r\n                alignContent: \"center\",\r\n                justifyContent: \"center\",\r\n            }}>\r\n            <CuentaHeader total={total} />\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                    margin: \"0.8em 1em\",\r\n                }}>\r\n                <Checkbox\r\n                    label=\"Seleccionar todo\"\r\n                    color=\"warning\"\r\n                    checked={cartItems.every((item) =>\r\n                        selectedItems.includes(item)\r\n                    )}\r\n                    onChange={() => {\r\n                        if (\r\n                            cartItems.every((item) =>\r\n                                selectedItems.includes(item)\r\n                            )\r\n                        ) {\r\n                            setSelectedItems([]);\r\n                        } else {\r\n                            setSelectedItems(cartItems);\r\n                        }\r\n                    }}\r\n                />\r\n                <Button\r\n                    variant=\"solid\"\r\n                    color=\"warning\"\r\n                    onClick={() => {\r\n                        setModalOpen(true);\r\n                    }}\r\n                    disabled={btnDisabled}>\r\n                    Eliminar\r\n                </Button>\r\n                <DeleteConfirmationModal\r\n                    open={modalOpen}\r\n                    setOpen={setModalOpen}\r\n                    selectedItems={selectedItems}\r\n                    setSelectedItems={setSelectedItems}\r\n                />\r\n            </div>\r\n            {cartItems.map((item: Item, index: number) => {\r\n                return (\r\n                    <div key={item.id}>\r\n                        <div\r\n                            style={{\r\n                                display: \"flex\",\r\n                                alignContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"space-between\",\r\n                                margin: \"0.8em 1em\",\r\n                            }}>\r\n                            <Checkbox\r\n                                color=\"warning\"\r\n                                label={\r\n                                    <Typography>\r\n                                        {item.quantity} x {item.name}\r\n                                    </Typography>\r\n                                }\r\n                                sx={{\r\n                                    alignContent: \"center\",\r\n                                    alignSelf: \"center\",\r\n                                    marginRight: 2,\r\n                                }}\r\n                                checked={selectedItems.some(\r\n                                    (selectedItem) =>\r\n                                        selectedItem.id === item.id\r\n                                )}\r\n                                onChange={() => {\r\n                                    handleItemChecked(item);\r\n                                }}\r\n                            />\r\n                            <div\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    alignContent: \"center\",\r\n                                }}>\r\n                                <div\r\n                                    style={{\r\n                                        display: \"flex\",\r\n                                        gap: 4,\r\n                                        flexDirection: \"row\",\r\n                                        alignContent: \"center\",\r\n                                        alignItems: \"center\",\r\n                                    }}>\r\n                                    <IconButton\r\n                                        variant=\"soft\"\r\n                                        color=\"warning\"\r\n                                        onClick={() => {\r\n                                            dispatch(removeItemFromCart(item));\r\n                                            setSelectedItems((prevItems) => {\r\n                                                return prevItems.filter(\r\n                                                    (prevItem) =>\r\n                                                        prevItem.id !== item.id\r\n                                                );\r\n                                            });\r\n                                        }}>\r\n                                        <Remove />\r\n                                    </IconButton>\r\n                                    <Typography\r\n                                        level=\"body-lg\"\r\n                                        sx={{ textAlign: \"center\" }}>\r\n                                        {item.quantity}\r\n                                    </Typography>\r\n                                    <IconButton\r\n                                        variant=\"soft\"\r\n                                        color=\"warning\"\r\n                                        onClick={() => {\r\n                                            dispatch(addItemToCart(item));\r\n                                            setSelectedItems((prevItems) => {\r\n                                                return prevItems.filter(\r\n                                                    (prevItem) =>\r\n                                                        prevItem.id !== item.id\r\n                                                );\r\n                                            });\r\n                                        }}>\r\n                                        <Add />\r\n                                    </IconButton>\r\n                                </div>\r\n                                <Typography\r\n                                    level=\"body-lg\"\r\n                                    ml={1}\r\n                                    textAlign={\"right\"}\r\n                                    alignSelf={\"center\"}\r\n                                    width={45}>\r\n                                    {item.price}\r\n                                </Typography>\r\n                            </div>\r\n                        </div>\r\n                        <Divider />\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cuenta;\r\n","import { Item } from \"../types.ts\";\r\n\r\nexport const calculateTotal = (items: Item[] | Item) => {\r\n    const arrayItems = Array.isArray(items) ? items : [items];\r\n    return arrayItems.reduce((total, item) => {\r\n        const priceMatch = item.price.match(/[\\d.]+/);\r\n        const price = priceMatch ? parseFloat(priceMatch[0]) : 0;\r\n        return total + price * item.quantity;\r\n    }, 0);\r\n};\r\n","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n    Card,\r\n    Drawer,\r\n    ModalClose,\r\n    Box,\r\n    Typography,\r\n    Badge,\r\n    IconButton,\r\n    Button,\r\n    Autocomplete,\r\n} from \"@mui/joy\";\r\nimport { Instagram, Phone, Search, ShoppingBasket } from \"@mui/icons-material\";\r\n\r\nimport Cuenta from \"../Components/Cuenta.tsx\";\r\n\r\nconst Header = () => {\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n    const { cartItems, menuCategories } = useSelector((state) => state.menu);\r\n    const navigate = useNavigate();\r\n    const handleLogoOnClick = () => {\r\n        navigate(\"/\");\r\n    };\r\n    const [isSearchDrawerOpen, setSearchDrawer] = useState(false);\r\n    const handleCartIconClick = () => {\r\n        setIsDrawerOpen(true);\r\n    };\r\n    const handleSearchOnClick = () => {\r\n        setSearchDrawer(true);\r\n    };\r\n    const flattenedOptions = Object.values(menuCategories).flatMap(\r\n        (category) => category.data\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Box\r\n                component=\"header\"\r\n                sx={{\r\n                    width: \"100%\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-evenly\",\r\n                    padding: \"0.5rem 0\",\r\n                    position: \"sticky\",\r\n                    top: \"0\",\r\n                    zIndex: 1100,\r\n                    backgroundColor: \"rgba(45, 33, 24, 1)\",\r\n                    backdropFilter: \"blur(20px)\",\r\n                }}>\r\n                <IconButton onClick={handleSearchOnClick} size={\"lg\"}>\r\n                    <Search\r\n                        sx={{ color: \"white\", transform: \"rotate(70deg)\" }}\r\n                    />\r\n                </IconButton>\r\n                <Typography\r\n                    level=\"h1\"\r\n                    onClick={handleLogoOnClick}\r\n                    fontFamily={\"Dancing Script, cursive\"}\r\n                    sx={{\r\n                        userSelect: \"none\",\r\n                        cursor: \"pointer\",\r\n                        color: \"#fff\",\r\n                        fontWeight: \"bold\",\r\n                        textShadow: \"2px 2px 4px rgba(0, 0, 0, 0.5)\",\r\n                        letterSpacing: \"0.05em\",\r\n                    }}>\r\n                    La Concheta\r\n                </Typography>\r\n                <IconButton onClick={handleCartIconClick}>\r\n                    <Badge\r\n                        badgeContent={cartItems.length}\r\n                        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n                        sx={{\r\n                            \"& .MuiBadge-badge\": {\r\n                                fontWeight: \"bold\",\r\n                                fontFamily: \"Arial, sans-serif\",\r\n                            },\r\n                        }}\r\n                        variant=\"solid\"\r\n                        color=\"warning\"\r\n                        size=\"md\">\r\n                        <ShoppingBasket\r\n                            sx={{\r\n                                color: \"white\",\r\n                                border: \"2px solid #2C1F16\",\r\n                                borderRadius: \"50%\",\r\n                                boxShadow: \"0 0 10px rgba(0, 0, 0, 0.5)\",\r\n                            }}\r\n                        />\r\n                    </Badge>\r\n                </IconButton>\r\n                <Drawer\r\n                    anchor=\"right\"\r\n                    color=\"warning\"\r\n                    open={isDrawerOpen}\r\n                    onClose={() => setIsDrawerOpen(false)}\r\n                    size=\"md\">\r\n                    <ModalClose />\r\n                    {cartItems.length > 0 ? (\r\n                        <Cuenta />\r\n                    ) : (\r\n                        <>\r\n                            <Card\r\n                                variant=\"soft\"\r\n                                color=\"warning\"\r\n                                sx={{\r\n                                    p: 2,\r\n                                    flexGrow: \"1\",\r\n                                    justifyContent: \"center\",\r\n                                    alignContent: \"center\",\r\n                                    gap: \"2rem\",\r\n                                }}>\r\n                                <Typography level=\"title-lg\" align=\"center\">\r\n                                    Tu carrito está vacío\r\n                                </Typography>\r\n                                <Typography\r\n                                    level=\"body-md\"\r\n                                    sx={{\r\n                                        textAlign: \"center\",\r\n                                    }}>\r\n                                    Para continuar, añade tus platos favoritos\r\n                                    al carrito desde nuestro menú.\r\n                                </Typography>\r\n                                <Button\r\n                                    variant=\"solid\"\r\n                                    color=\"warning\"\r\n                                    sx={{\r\n                                        display: \"block\",\r\n                                        p: \"auto\",\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        setIsDrawerOpen(false);\r\n                                        !window.location.hash.startsWith(\r\n                                            \"#/carta/\"\r\n                                        ) &&\r\n                                            navigate(\r\n                                                \"/carta/Entrantes%20Calientes\"\r\n                                            );\r\n                                    }}>\r\n                                    <Typography\r\n                                        color=\"#fff\"\r\n                                        level=\"body-lg\"\r\n                                        fontWeight=\"bold\">\r\n                                        Añadir platos\r\n                                    </Typography>\r\n                                </Button>\r\n                            </Card>\r\n                        </>\r\n                    )}\r\n                </Drawer>\r\n            </Box>\r\n            <Drawer\r\n                size=\"sm\"\r\n                onClose={() => setSearchDrawer(false)}\r\n                anchor=\"top\"\r\n                open={isSearchDrawerOpen}>\r\n                <Autocomplete\r\n                    options={flattenedOptions}\r\n                    getOptionLabel={(option) => option.name || \"\"}\r\n                />\r\n            </Drawer>\r\n\r\n            <Box\r\n                variant=\"plain\"\r\n                sx={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    alignContent: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                    gap: \".8rem\",\r\n                    position: \"sticky\",\r\n                    top: \"4em\",\r\n                    zIndex: 1000,\r\n                    p: \".4em\",\r\n                    backgroundColor: \"rgba(162, 125, 94, 1)\",\r\n                }}>\r\n                <Typography\r\n                    level=\"title-md\"\r\n                    sx={{\r\n                        ml: \".2rem\",\r\n                        textAlign: \"center\",\r\n                        textWrap: \"pretty\",\r\n                        color: \"white\",\r\n                    }}>\r\n                    Visítanos en Instagram!\r\n                </Typography>\r\n                <IconButton\r\n                    component=\"a\"\r\n                    target=\"_blank\"\r\n                    href=\"https://www.instagram.com/laconchetarestaurante/\"\r\n                    variant=\"solid\"\r\n                    sx={{\r\n                        backgroundColor: \"#8d6749\",\r\n                    }}>\r\n                    <Instagram\r\n                        sx={{\r\n                            color: \"white\",\r\n                        }}\r\n                    />\r\n                </IconButton>\r\n\r\n                <Typography\r\n                    level=\"title-sm\"\r\n                    sx={{\r\n                        textAlign: \"center\",\r\n                        textWrap: \"balance\",\r\n                        marginRight: \"1\",\r\n                        color: \"white\",\r\n                    }}>\r\n                    O...\r\n                </Typography>\r\n                <Button\r\n                    component=\"a\"\r\n                    href=\"tel:962121602\"\r\n                    variant=\"solid\"\r\n                    sx={{\r\n                        ml: \"0.4em\",\r\n                        mr: \".7rem\",\r\n                        backgroundColor: \"#8d6749\",\r\n                    }}\r\n                    startDecorator={<Phone sx={{ color: \"white\" }} />}>\r\n                    <Typography\r\n                        sx={{\r\n                            color: \"white\",\r\n                        }}>\r\n                        LLámanos!\r\n                    </Typography>\r\n                </Button>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\nexport default Header;\r\n"],"names":["_ref","open","setOpen","selectedItems","setSelectedItems","dispatch","useDispatch","_jsx","Modal","children","_jsxs","ModalDialog","variant","role","DialogTitle","WarningRounded","color","Divider","DialogContent","sx","overflow","List","map","item","Typography","fontSize","quantity","name","id","DialogActions","Button","onClick","removeAllFromCart","CuentaHeader","total","_Fragment","style","display","gap","alignContent","justifyContent","alignItems","marginBottom","level","alignSelf","fontWeight","Receipt","Chip","size","AccordionGroup","transition","concat","accordionClasses","root","marginTop","paddingBottom","background","expanded","bgcolor","borderRadius","borderBottom","borderColor","boxShadow","Accordion","m","defaultExpanded","AccordionSummary","AccordionDetails","textAlign","startDecorator","PriorityHigh","Cuenta","modalOpen","setModalOpen","useState","btnDisabled","setBtnDisabled","cartItems","useSelector","state","menu","items","length","Array","isArray","reduce","priceMatch","price","match","parseFloat","useEffect","flexDirection","margin","Checkbox","label","checked","every","includes","onChange","disabled","DeleteConfirmationModal","index","marginRight","some","selectedItem","prevItems","filter","prevItem","handleItemChecked","IconButton","removeItemFromCart","Remove","addItemToCart","Add","ml","width","Header","isDrawerOpen","setIsDrawerOpen","menuCategories","navigate","useNavigate","isSearchDrawerOpen","setSearchDrawer","flattenedOptions","Object","values","flatMap","category","data","Box","component","padding","position","top","zIndex","backgroundColor","backdropFilter","handleSearchOnClick","Search","transform","handleLogoOnClick","fontFamily","userSelect","cursor","textShadow","letterSpacing","handleCartIconClick","Badge","badgeContent","anchorOrigin","vertical","horizontal","ShoppingBasket","border","Drawer","anchor","onClose","ModalClose","Card","p","flexGrow","align","window","location","hash","startsWith","Autocomplete","options","getOptionLabel","option","textWrap","target","href","Instagram","mr","Phone"],"sourceRoot":""}