{"version":3,"file":"static/js/495.33196847.chunk.js","mappings":"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","sources":["Components/ItemCard.jsx","hooks/useDocumentTitle.js","pages/ProductsPage.jsx"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    Typography,\r\n    Card,\r\n    CardContent,\r\n    IconButton,\r\n    CardActions,\r\n} from \"@mui/joy\";\r\nimport { Add, Remove } from \"@mui/icons-material\";\r\nimport { addItemToCart, removeItemFromCart } from \"../features/menuSlice\";\r\n\r\nconst ItemCard = ({ item }) => {\r\n    const dispatch = useDispatch();\r\n    const { cartItems } = useSelector((state) => state.menu);\r\n    const itemInCart = cartItems.find(\r\n        (cartItem) => cartItem.name === item.name\r\n    );\r\n    const quantity = itemInCart ? itemInCart.quantity : 0;\r\n    return (\r\n        <Card\r\n            variant=\"outlined\"\r\n            key={item.name}\r\n            sx={{\r\n                // backdropFilter: \"blur(50px)\",\r\n                cursor: \"pointer\",\r\n                m: \"1em\",\r\n            }}>\r\n            <CardContent>\r\n                <Typography level=\"h3\" fontSize={\"1.5rem\"}>\r\n                    {item.name}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardContent>\r\n                <Typography level=\"body-md\">{item.description}</Typography>\r\n            </CardContent>\r\n            <CardContent orientation=\"horizontal\">\r\n                <Typography level=\"body-md\" flex=\"1\">\r\n                    Precio:\r\n                    {\" \" + item.price}\r\n                </Typography>\r\n                <CardActions>\r\n                    <IconButton\r\n                        aria-label=\"Delete from cart\"\r\n                        onClick={() => dispatch(removeItemFromCart(item))}>\r\n                        <Remove />\r\n                    </IconButton>\r\n                    <Typography level=\"body-2\" color=\"neutral\">\r\n                        {quantity}\r\n                    </Typography>\r\n                    <IconButton\r\n                        aria-label=\"Add to cart\"\r\n                        onClick={() => dispatch(addItemToCart(item))}>\r\n                        <Add />\r\n                    </IconButton>\r\n                </CardActions>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\nexport default ItemCard;\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useDocumentTitle = (title) => {\r\n    useEffect(() => {\r\n        document.title = title;\r\n    }, [title]);\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Tabs, TabList, Tab, TabPanel, Typography } from \"@mui/joy\";\r\nimport ItemCard from \"../Components/ItemCard.jsx\";\r\nimport { useDocumentTitle } from \"../hooks/useDocumentTitle.js\";\r\n\r\nfunction ProductsPage() {\r\n    useDocumentTitle(\"LaConcheta - Carta de la casa\");\r\n    const { menuCategories } = useSelector((state) => state.menu);\r\n    const navigate = useNavigate();\r\n    const { categoryName } = useParams();\r\n    const [value, setValue] = useState(\r\n        Object.keys(menuCategories).indexOf(categoryName)\r\n    );\r\n    useEffect(() => {\r\n        const categoryIndex = Object.keys(menuCategories).indexOf(categoryName);\r\n        setValue(categoryIndex);\r\n    }, [categoryName, menuCategories]);\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        navigate(`/categories/${Object.keys(menuCategories)[newValue]}`);\r\n    };\r\n\r\n    return (\r\n        <Tabs\r\n            aria-label=\"Vertical tabs\"\r\n            orientation=\"vertical\"\r\n            onChange={handleTabChange}\r\n            value={value}\r\n            sx={{\r\n                // maxWidth: \"100%\",\r\n                backgroundColor: \"transparent\",\r\n                // position: \"relative\",\r\n                // display: \"flex\",\r\n                marginLeft: \"5.8rem\",\r\n            }}>\r\n            <TabList\r\n                sx={{\r\n                    position: \"fixed\",\r\n                    left: \"0\",\r\n                    // overflow: \"  hidden\",\r\n                    \"&::-webkit-scrollbar\": { display: \"none\" },\r\n                    width: \"7rem\",\r\n                    p: \"1rem 0\",\r\n                    gap: \"1em\",\r\n                    bgcolor: \"AppWorkspace\",\r\n                    borderRadius: \"8px\",\r\n                }}>\r\n                {Object.entries(menuCategories).map(([key], index) => (\r\n                    <Tab\r\n                        key={index}\r\n                        sx={{\r\n                            // paddingRight: 2,\r\n                            \"&.Mui-selected\": {\r\n                                fontWeight: \"bold\",\r\n                            },\r\n                        }}>\r\n                        <Typography level=\"body-lg\">{key}</Typography>\r\n                    </Tab>\r\n                ))}\r\n            </TabList>\r\n            {Object.entries(menuCategories).map(([key, value], index) => (\r\n                <TabPanel\r\n                    key={key}\r\n                    value={index}\r\n                    sx={{ p: \"0 0 0 1em\", m: \"0\" }}>\r\n                    {value.data.map((item, key) => (\r\n                        <ItemCard item={item} key={key} />\r\n                    ))}\r\n                </TabPanel>\r\n            ))}\r\n        </Tabs>\r\n    );\r\n}\r\n\r\nexport default ProductsPage;\r\n"],"names":["_ref","item","dispatch","useDispatch","cartItems","useSelector","state","menu","itemInCart","find","cartItem","name","quantity","_jsxs","Card","variant","sx","cursor","m","children","_jsx","CardContent","Typography","level","fontSize","description","orientation","flex","price","CardActions","IconButton","onClick","removeItemFromCart","Remove","color","addItemToCart","Add","useDocumentTitle","title","useEffect","document","menuCategories","navigate","useNavigate","categoryName","useParams","value","setValue","useState","Object","keys","indexOf","categoryIndex","Tabs","onChange","handleTabChange","event","newValue","concat","backgroundColor","marginLeft","TabList","position","left","display","width","p","gap","bgcolor","borderRadius","entries","map","index","key","Tab","fontWeight","_ref2","TabPanel","data","ItemCard"],"sourceRoot":""}