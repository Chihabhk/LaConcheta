{"version":3,"file":"static/js/614.def1acd9.chunk.js","mappings":"sIAEO,MAAMA,EAAoBC,KAC7BC,EAAAA,EAAAA,YAAU,KACNC,SAASF,MAAQA,CAAK,GACvB,CAACA,GAAO,C,8LCAf,MA6BA,EA7BiBG,IAAe,IAAd,KAAEC,GAAMD,EACtB,MAAME,GAAWC,EAAAA,EAAAA,MACjB,OACIC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACDC,QAAQ,WAERC,GAAI,CACAC,eAAgB,aAChBC,OAAQ,UACRC,EAAG,OACLC,SAAA,EACFC,EAAAA,EAAAA,KAACC,EAAAA,GAAU,CAACC,MAAM,KAAIH,SAAEV,EAAKc,QAC7BH,EAAAA,EAAAA,KAACI,EAAAA,EAAW,CAAAL,UACRC,EAAAA,EAAAA,KAACC,EAAAA,GAAU,CAACC,MAAM,UAASH,SAAEV,EAAKgB,iBAEtCb,EAAAA,EAAAA,MAACY,EAAAA,EAAW,CAACE,YAAY,aAAYP,SAAA,EACjCP,EAAAA,EAAAA,MAACS,EAAAA,GAAU,CAACC,MAAM,UAASH,SAAA,CAAC,UAEvB,IAAMV,EAAKkB,UAEhBP,EAAAA,EAAAA,KAACQ,EAAAA,GAAU,CACP,aAAW,cACXC,QAASA,IAAMnB,GAASoB,EAAAA,EAAAA,IAAcrB,IAAOU,UAC7CC,EAAAA,EAAAA,KAACW,EAAAA,EAAG,WAlBPtB,EAAKc,KAqBP,E,cCsCf,QA9DA,YACInB,EAAAA,EAAAA,GAAiB,iCACjB,MAAM,eAAE4B,IAAmBC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,OAClDC,GAAWC,EAAAA,EAAAA,OACX,aAAEC,IAAiBC,EAAAA,EAAAA,OAClBC,EAAOC,IAAYC,EAAAA,EAAAA,UACtBC,OAAOC,KAAKZ,GAAgBa,QAAQP,IAYxC,OAVAhC,EAAAA,EAAAA,YAAU,KACN,MAAMwC,EAAgBH,OAAOC,KAAKZ,GAAgBa,QAAQP,GAC1DG,EAASK,EAAc,GACxB,CAACR,EAAcN,KAQdZ,EAAAA,EAAAA,KAAA2B,EAAAA,SAAA,CAAA5B,UACIP,EAAAA,EAAAA,MAACoC,EAAAA,EAAI,CACD,aAAW,gBACXtB,YAAY,WACZuB,SAVYC,CAACC,EAAOC,KAC5BX,EAASW,GACThB,EAAS,eAADiB,OAAgBV,OAAOC,KAAKZ,GAAgBoB,IAAY,EASxDZ,MAAOA,EACPzB,GAAI,CACAuC,SAAU,OACVC,gBAAiB,cACjBC,SAAU,YACZrC,SAAA,EACFC,EAAAA,EAAAA,KAACqC,EAAAA,EAAO,CACJ1C,GAAI,CACA2C,SAAU,SACV,uBAAwB,CAAEC,QAAS,QACnCC,SAAU,OACVC,QAAS,mBACTC,aAAc,OAChB3C,SACDwB,OAAOoB,QAAQ/B,GAAgBgC,KAAI,CAAAxD,EAAQyD,KAAK,IAAXC,GAAI1D,EAAA,OACtCY,EAAAA,EAAAA,KAAC+C,EAAAA,EAAG,CAEApD,GAAI,CACA,iBAAkB,CACdqD,WAAY,SAElBjD,SACD+C,GANID,EAOH,MAGbtB,OAAOoB,QAAQ/B,GAAgBgC,KAAI,CAAAK,EAAeJ,KAAK,IAAlBC,EAAK1B,GAAM6B,EAAA,OAC7CjD,EAAAA,EAAAA,KAACkD,EAAAA,EAAQ,CAAW9B,MAAOyB,EAAM9C,SAC5BqB,EAAM+B,KAAKP,KAAI,CAACvD,EAAMyD,KACnB9C,EAAAA,EAAAA,KAACoD,EAAQ,CAAC/D,KAAMA,GAAWyD,MAFpBA,EAIJ,QAK/B,C","sources":["hooks/useDocumentTitle.js","Components/ItemCard.jsx","pages/ProductsPage.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\n\r\nexport const useDocumentTitle = (title) => {\r\n    useEffect(() => {\r\n        document.title = title;\r\n    }, [title]);\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\nimport { Typography, Card, CardContent, IconButton } from \"@mui/joy\";\r\nimport { Add } from \"@mui/icons-material\";\r\nimport { addItemToCart } from \"../features/menuSlice\";\r\n\r\nconst ItemCard = ({ item }) => {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <Card\r\n            variant=\"outlined\"\r\n            key={item.name}\r\n            sx={{\r\n                backdropFilter: \"blur(50px)\",\r\n                cursor: \"pointer\",\r\n                m: \"1em\",\r\n            }}>\r\n            <Typography level=\"h3\">{item.name}</Typography>\r\n            <CardContent>\r\n                <Typography level=\"body-lg\">{item.description}</Typography>\r\n            </CardContent>\r\n            <CardContent orientation=\"horizontal\">\r\n                <Typography level=\"body-md\">\r\n                    Precio:\r\n                    {\" \" + item.price}\r\n                </Typography>\r\n                <IconButton\r\n                    aria-label=\"Add to cart\"\r\n                    onClick={() => dispatch(addItemToCart(item))}>\r\n                    <Add />\r\n                </IconButton>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\nexport default ItemCard;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Tabs, TabList, Tab, TabPanel } from \"@mui/joy\";\r\nimport ItemCard from \"../Components/ItemCard.jsx\";\r\nimport { useDocumentTitle } from \"../hooks/useDocumentTitle.js\";\r\n\r\nfunction ProductsPage() {\r\n    useDocumentTitle(\"LaConcheta - Carta de la casa\");\r\n    const { menuCategories } = useSelector((state) => state.menu);\r\n    const navigate = useNavigate();\r\n    const { categoryName } = useParams();\r\n    const [value, setValue] = useState(\r\n        Object.keys(menuCategories).indexOf(categoryName)\r\n    );\r\n    useEffect(() => {\r\n        const categoryIndex = Object.keys(menuCategories).indexOf(categoryName);\r\n        setValue(categoryIndex);\r\n    }, [categoryName, menuCategories]);\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        navigate(`/categories/${Object.keys(menuCategories)[newValue]}`);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tabs\r\n                aria-label=\"Vertical tabs\"\r\n                orientation=\"vertical\"\r\n                onChange={handleTabChange}\r\n                value={value}\r\n                sx={{\r\n                    maxWidth: \"100%\",\r\n                    backgroundColor: \"transparent\",\r\n                    position: \"relative\",\r\n                }}>\r\n                <TabList\r\n                    sx={{\r\n                        overflow: \"hidden\",\r\n                        \"&::-webkit-scrollbar\": { display: \"none\" },\r\n                        minWidth: \"5rem\",\r\n                        bgcolor: \"background.paper\",\r\n                        borderRadius: \"8px\",\r\n                    }}>\r\n                    {Object.entries(menuCategories).map(([key], index) => (\r\n                        <Tab\r\n                            key={index}\r\n                            sx={{\r\n                                \"&.Mui-selected\": {\r\n                                    fontWeight: \"bold\",\r\n                                },\r\n                            }}>\r\n                            {key}\r\n                        </Tab>\r\n                    ))}\r\n                </TabList>\r\n                {Object.entries(menuCategories).map(([key, value], index) => (\r\n                    <TabPanel key={key} value={index}>\r\n                        {value.data.map((item, key) => (\r\n                            <ItemCard item={item} key={key} />\r\n                        ))}\r\n                    </TabPanel>\r\n                ))}\r\n            </Tabs>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductsPage;\r\n"],"names":["useDocumentTitle","title","useEffect","document","_ref","item","dispatch","useDispatch","_jsxs","Card","variant","sx","backdropFilter","cursor","m","children","_jsx","Typography","level","name","CardContent","description","orientation","price","IconButton","onClick","addItemToCart","Add","menuCategories","useSelector","state","menu","navigate","useNavigate","categoryName","useParams","value","setValue","useState","Object","keys","indexOf","categoryIndex","_Fragment","Tabs","onChange","handleTabChange","event","newValue","concat","maxWidth","backgroundColor","position","TabList","overflow","display","minWidth","bgcolor","borderRadius","entries","map","index","key","Tab","fontWeight","_ref2","TabPanel","data","ItemCard"],"sourceRoot":""}