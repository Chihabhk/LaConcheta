{"version":3,"file":"static/js/228.74182d4e.chunk.js","mappings":"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","sources":["Components/ItemCard.jsx","pages/ProductsPage.jsx"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    Typography,\r\n    Card,\r\n    CardContent,\r\n    IconButton,\r\n    CardActions,\r\n} from \"@mui/joy\";\r\nimport { Add, Remove } from \"@mui/icons-material\";\r\nimport { addItemToCart, removeItemFromCart } from \"../features/menuSlice\";\r\n\r\nconst ItemCard = ({ item }) => {\r\n    const dispatch = useDispatch();\r\n    const { cartItems } = useSelector((state) => state.menu);\r\n    const itemInCart = cartItems.find(\r\n        (cartItem) => cartItem.name === item.name\r\n    );\r\n    const quantity = itemInCart ? itemInCart.quantity : 0;\r\n    return (\r\n        <Card\r\n            variant=\"plain\"\r\n            sx={{\r\n                cursor: \"pointer\",\r\n                marginBottom: 1,\r\n            }}>\r\n            <CardContent>\r\n                <Typography level=\"h3\">{item.name}</Typography>\r\n                <Typography level=\"body-sm\">{item.description}</Typography>\r\n            </CardContent>\r\n            <CardContent\r\n                orientation=\"horizontal\"\r\n                sx={{ alignContent: \"center\", alignItems: \"center\" }}>\r\n                <Typography level=\"body-md\" flex=\"1\">\r\n                    Precio:\r\n                    {\" \" + item.price}\r\n                </Typography>\r\n                <CardActions>\r\n                    <IconButton\r\n                        aria-label=\"Delete from cart\"\r\n                        onClick={() => dispatch(removeItemFromCart(item))}>\r\n                        <Remove />\r\n                    </IconButton>\r\n                    <Typography level=\"body-2\" color=\"danger\">\r\n                        {quantity}\r\n                    </Typography>\r\n                    <IconButton\r\n                        aria-label=\"Add to cart\"\r\n                        onClick={() => dispatch(addItemToCart(item))}>\r\n                        <Add />\r\n                    </IconButton>\r\n                </CardActions>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\nexport default ItemCard;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Tabs, TabList, Tab, TabPanel, Typography } from \"@mui/joy\";\r\nimport ItemCard from \"../Components/ItemCard.jsx\";\r\nimport { useDocumentTitle } from \"../hooks/useDocumentTitle.js\";\r\n\r\nfunction ProductsPage() {\r\n    useDocumentTitle(\"LaConcheta - Carta de la casa\");\r\n    const { menuCategories } = useSelector((state) => state.menu);\r\n    const navigate = useNavigate();\r\n    const { categoryName } = useParams();\r\n    const [value, setValue] = useState(\r\n        Object.keys(menuCategories).indexOf(categoryName)\r\n    );\r\n    useEffect(() => {\r\n        const categoryIndex = Object.keys(menuCategories).indexOf(categoryName);\r\n        setValue(categoryIndex);\r\n    }, [categoryName, menuCategories]);\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        navigate(`/categories/${Object.keys(menuCategories)[newValue]}`);\r\n    };\r\n\r\n    return (\r\n        <Tabs\r\n            aria-label=\"Vertical tabs\"\r\n            orientation=\"vertical\"\r\n            onChange={handleTabChange}\r\n            value={value}\r\n            sx={{\r\n                position: \"relative\",\r\n                backgroundColor: \"transparent\",\r\n                marginLeft: \"8rem\",\r\n                marginRight: \"0.8rem\",\r\n                height: \"100%\",\r\n            }}>\r\n            <TabList\r\n                sx={{\r\n                    position: \"fixed\",\r\n                    left: \"0\",\r\n                    overflow: \"hidden\",\r\n                    \"&::-webkit-scrollbar\": { display: \"none\" },\r\n                    width: \"7rem\",\r\n                    p: \"0\",\r\n                    gap: \"0.5rem\",\r\n                    backdropFilter: \"blur(20px)\",\r\n                    maxHeight: \"100%\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                }}>\r\n                {Object.entries(menuCategories).map(([key], index) => (\r\n                    <Tab\r\n                        key={index}\r\n                        sx={{\r\n                            width: \"100%\",\r\n                            textAlign: \"center\",\r\n\r\n                            borderRadius: \"8px\",\r\n                            \"&.Mui-selected\": {\r\n                                fontWeight: \"bold\",\r\n                            },\r\n                        }}>\r\n                        <Typography level=\"body-lg\">{key}</Typography>\r\n                    </Tab>\r\n                ))}\r\n            </TabList>\r\n            {Object.entries(menuCategories).map(([key, value], index) => (\r\n                <TabPanel key={key} value={index} sx={{ m: 0, p: 0 }}>\r\n                    {value.data.map((item, key) => (\r\n                        <ItemCard item={item} key={key} />\r\n                    ))}\r\n                </TabPanel>\r\n            ))}\r\n        </Tabs>\r\n    );\r\n}\r\n\r\nexport default ProductsPage;\r\n"],"names":["_ref","item","dispatch","useDispatch","cartItems","useSelector","state","menu","itemInCart","find","cartItem","name","quantity","_jsxs","Card","variant","sx","cursor","marginBottom","children","CardContent","_jsx","Typography","level","description","orientation","alignContent","alignItems","flex","price","CardActions","IconButton","onClick","removeItemFromCart","Remove","color","addItemToCart","Add","useDocumentTitle","menuCategories","navigate","useNavigate","categoryName","useParams","value","setValue","useState","Object","keys","indexOf","useEffect","categoryIndex","Tabs","onChange","handleTabChange","event","newValue","concat","position","backgroundColor","marginLeft","marginRight","height","TabList","left","overflow","display","width","p","gap","backdropFilter","maxHeight","justifyContent","entries","map","index","key","Tab","textAlign","borderRadius","fontWeight","_ref2","TabPanel","m","data","ItemCard"],"sourceRoot":""}