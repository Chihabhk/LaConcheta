{"version":3,"file":"static/js/808.062fbb8b.chunk.js","mappings":"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","sources":["hooks/useDocumentTitle.js","Components/ItemCard.jsx","pages/CartaPage.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\n\r\nexport const useDocumentTitle = (title) => {\r\n    useEffect(() => {\r\n        document.title = title;\r\n    }, [title]);\r\n};\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    Typography,\r\n    Card,\r\n    CardContent,\r\n    IconButton,\r\n    CardActions,\r\n} from \"@mui/joy\";\r\nimport { Add, Remove } from \"@mui/icons-material\";\r\nimport { addItemToCart, removeItemFromCart } from \"../features/menuSlice\";\r\n\r\nconst ItemCard = ({ item }) => {\r\n    const dispatch = useDispatch();\r\n    const { cartItems } = useSelector((state) => state.menu);\r\n    const itemInCart = cartItems.find(\r\n        (cartItem) => cartItem.name === item.name\r\n    );\r\n    const quantity = itemInCart ? itemInCart.quantity : 0;\r\n    return (\r\n        <Card\r\n            variant=\"plain\"\r\n            color=\"warning\"\r\n            sx={{\r\n                cursor: \"pointer\",\r\n                marginBottom: 1,\r\n                boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\",\r\n            }}>\r\n            <CardContent>\r\n                <Typography level=\"h2\" fontSize={18}>\r\n                    {item.name}\r\n                </Typography>\r\n                <Typography level=\"body-sm\">{item.description}</Typography>\r\n            </CardContent>\r\n            <CardContent\r\n                orientation=\"horizontal\"\r\n                sx={{\r\n                    alignContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                }}>\r\n                <Typography level=\"body-md\">\r\n                    Precio:\r\n                    {\" \" + item.price}\r\n                </Typography>\r\n                <CardActions sx={{ justifyContent: \"flex-end\" }}>\r\n                    <IconButton\r\n                        aria-label=\"Delete from cart\"\r\n                        onClick={() => dispatch(removeItemFromCart(item))}>\r\n                        <Remove />\r\n                    </IconButton>\r\n                    <Typography level=\"body-2\" color=\"warning\">\r\n                        {quantity}\r\n                    </Typography>\r\n                    <IconButton\r\n                        aria-label=\"Add to cart\"\r\n                        onClick={() => dispatch(addItemToCart(item))}>\r\n                        <Add />\r\n                    </IconButton>\r\n                </CardActions>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\nexport default ItemCard;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Tabs, TabList, Tab, TabPanel, Typography } from \"@mui/joy\";\r\nimport ItemCard from \"../Components/ItemCard.jsx\";\r\nimport { useDocumentTitle } from \"../hooks/useDocumentTitle.js\";\r\n\r\nfunction CartaPage() {\r\n    useDocumentTitle(\"LaConcheta - Carta de la casa\");\r\n    const { menuCategories } = useSelector((state) => state.menu);\r\n    const navigate = useNavigate();\r\n    const { categoryName } = useParams();\r\n    const categoryIndex = Object.keys(menuCategories).indexOf(categoryName);\r\n    const [value, setValue] = useState(\r\n        categoryIndex === -1 ? 2 : categoryIndex\r\n    );\r\n\r\n    useEffect(() => {\r\n        setValue(categoryIndex === -1 ? 2 : categoryIndex);\r\n    }, [categoryIndex]);\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        navigate(`/carta/${Object.keys(menuCategories)[newValue]}`);\r\n    };\r\n\r\n    return (\r\n        <Tabs\r\n            aria-label=\"Vertical tabs\"\r\n            orientation=\"vertical\"\r\n            onChange={handleTabChange}\r\n            value={value}\r\n            sx={{\r\n                // position: \"relative\",\r\n                backgroundColor: \"transparent\",\r\n                marginLeft: \"8rem\",\r\n                marginRight: \"0.8rem\",\r\n                height: \"100%\",\r\n            }}>\r\n            <TabList\r\n                sx={{\r\n                    position: \"fixed\",\r\n                    left: \"0\",\r\n                    overflow: \"hidden\",\r\n                    \"&::-webkit-scrollbar\": { display: \"none\" },\r\n                    width: \"7rem\",\r\n                    ml: 1,\r\n                    p: \"0\",\r\n                    gap: \"0.7rem\",\r\n                    backdropFilter: \"blur(20px)\",\r\n                    maxHeight: \"100%\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                }}>\r\n                {Object.entries(menuCategories).map(([key], index) => (\r\n                    <Tab\r\n                        key={index}\r\n                        sx={{\r\n                            width: \"100%\",\r\n                            textAlign: \"center\",\r\n                            boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\",\r\n                            borderRadius: \"8px\",\r\n                            m: \"0 \",\r\n                            \"&.Mui-selected\": {\r\n                                fontWeight: \"bold\",\r\n                            },\r\n                        }}>\r\n                        <Typography level=\"body-lg\">{key}</Typography>\r\n                    </Tab>\r\n                ))}\r\n            </TabList>\r\n            {Object.entries(menuCategories).map(([key, value], index) => (\r\n                <TabPanel\r\n                    key={key}\r\n                    value={index}\r\n                    sx={{ m: 0, p: 0, width: \"100%\" }}>\r\n                    {value.data.map((item, key) => (\r\n                        <ItemCard item={item} key={key} />\r\n                    ))}\r\n                </TabPanel>\r\n            ))}\r\n        </Tabs>\r\n    );\r\n}\r\n\r\nexport default CartaPage;\r\n"],"names":["useDocumentTitle","title","useEffect","document","_ref","item","dispatch","useDispatch","cartItems","useSelector","state","menu","itemInCart","find","cartItem","name","quantity","_jsxs","Card","variant","color","sx","cursor","marginBottom","boxShadow","children","CardContent","_jsx","Typography","level","fontSize","description","orientation","alignContent","alignItems","display","justifyContent","price","CardActions","IconButton","onClick","removeItemFromCart","Remove","addItemToCart","Add","menuCategories","navigate","useNavigate","categoryName","useParams","categoryIndex","Object","keys","indexOf","value","setValue","useState","Tabs","onChange","handleTabChange","event","newValue","concat","backgroundColor","marginLeft","marginRight","height","TabList","position","left","overflow","width","ml","p","gap","backdropFilter","maxHeight","entries","map","index","key","Tab","textAlign","borderRadius","m","fontWeight","_ref2","TabPanel","data","ItemCard"],"sourceRoot":""}