{"version":3,"file":"static/js/412.88086f26.chunk.js","mappings":"ydAgBA,MA2CA,EA3CgCA,IAA+B,IAA9B,KAAEC,EAAI,QAAEC,EAAO,MAAEC,GAAOH,EACrD,MAAMI,GAAWC,EAAAA,EAAAA,MACjB,OACIC,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CAACN,KAAMA,EAAKO,UACdC,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CAACC,QAAQ,WAAWC,KAAK,cAAaJ,SAAA,EAC9CC,EAAAA,EAAAA,MAACI,EAAAA,EAAW,CAAAL,SAAA,EACRF,EAAAA,EAAAA,KAACQ,EAAAA,EAAc,CAACC,MAAM,YAAY,sBAGtCT,EAAAA,EAAAA,KAACU,EAAAA,EAAO,KACRV,EAAAA,EAAAA,KAACW,EAAAA,EAAa,CAACC,GAAI,CAAEC,SAAU,WAAYX,SAAC,qFAI5CF,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACF,GAAI,CAAEC,SAAU,QAASX,SAC1BL,EAAMkB,KAAKC,IACRb,EAAAA,EAAAA,MAACc,EAAAA,GAAU,CAAiBC,SAAU,GAAGhB,SAAA,CACpCc,EAAKG,SAAS,MAAIH,EAAKI,OADXJ,EAAKI,WAM9BjB,EAAAA,EAAAA,MAACkB,EAAAA,EAAa,CAAAnB,SAAA,EACVF,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,CACHjB,QAAQ,QACRI,MAAM,SACNc,QAASA,KACL3B,GAAQ,GACRE,GAAS0B,EAAAA,EAAAA,IAAkB3B,GAAO,EACpCK,SAAC,cAGPF,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,CACHjB,QAAQ,QACRI,MAAM,UACNc,QAASA,IAAM3B,GAAQ,GAAOM,SAAC,oBAKvC,ECfVuB,EAAe/B,IAAe,IAAd,KAAEsB,GAAMtB,EAC1B,MAAMI,GAAWC,EAAAA,EAAAA,MAEjB,OACII,EAAAA,EAAAA,MAAA,OACIuB,MAAO,CACHC,QAAS,OACTC,UAAW,WACXC,IAAK,EACLC,cAAe,MACfC,aAAc,SACdC,WAAY,UACd9B,SAAA,EACFF,EAAAA,EAAAA,KAACiC,EAAAA,GAAU,CACP5B,QAAQ,OACRkB,QAASA,KACLzB,GAASoC,EAAAA,EAAAA,IAAmBlB,GAAM,EACpCd,UACFF,EAAAA,EAAAA,KAACmC,EAAAA,EAAM,OAEXnC,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CAACmB,MAAM,UAAUxB,GAAI,CAAEyB,UAAW,UAAWnC,SACnDc,EAAKG,YAEVnB,EAAAA,EAAAA,KAACiC,EAAAA,GAAU,CACP5B,QAAQ,OACRkB,QAASA,IAAMzB,GAASwC,EAAAA,EAAAA,IAActB,IAAOd,UAC7CF,EAAAA,EAAAA,KAACuC,EAAAA,EAAG,QAEN,EAed,MAoNA,EApNeC,KACX,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAaC,IAAkBF,EAAAA,EAAAA,WAAS,IACxCG,EAAeC,IAAoBJ,EAAAA,EAAAA,UAAiB,KACrD,UAAEK,IAAcC,EAAAA,EAAAA,KAAaC,GAAiBA,EAAMC,OAEpDC,GA1DcvD,EA2DhBiD,EAAcO,OAAS,EAAIP,EAAgBE,GA1D5BM,MAAMC,QAAQ1D,GAASA,EAAQ,CAACA,IACjC2D,QAAO,CAACJ,EAAOpC,KAC7B,MAAMyC,EAAazC,EAAK0C,MAAMC,MAAM,UAEpC,OAAOP,GADOK,EAAaG,WAAWH,EAAW,IAAM,GAChCzC,EAAKG,QAAQ,GACrC,IANiBtB,OA8DpBgE,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAehB,EAAc/B,KAAKgD,IACpC,MAAMC,EAAWhB,EAAUiB,MACtBjD,GAASA,EAAKI,OAAS2C,EAAa3C,OAEzC,OAAK4C,EACE,IACAD,EACH5C,SAAU6C,EAAS7C,UAHD4C,CAIrB,IA9Bb,IAAyBG,EAAsBC,EAiCvCtB,EAAuC,IAAxBiB,EAAaT,QAjCWc,EAkCJL,IAlClBI,EAkCGpB,GAjCPO,SAAWc,EAASd,QAE9Ba,EAAaE,MAAK,CAACpD,EAAMqD,IAExBrD,EAAKI,OAAS+C,EAASE,GAAOjD,MAC9BJ,EAAKG,WAAagD,EAASE,GAAOlD,aA6BlC4B,EAAiBe,EACrB,GACD,CAACd,EAAWF,IAmBf,OACI3C,EAAAA,EAAAA,MAAA,OACIuB,MAAO,CACHC,QAAS,OACTG,cAAe,SACfwC,UAAW,MACXvC,aAAc,SACdwC,eAAgB,UAClBrE,SAAA,EACFC,EAAAA,EAAAA,MAAA,OACIuB,MAAO,CACHC,QAAS,OACTE,IAAK,EACLE,aAAc,SACdwC,eAAgB,UAChBvC,WAAY,SACZwC,aAAc,OAChBtE,SAAA,EACFF,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CACPmB,MAAM,KACNxB,GAAI,CACAgB,UAAW,SACX6C,WAAY,IACZhE,MAAO,WACTP,SAAC,YAGPF,EAAAA,EAAAA,KAAC0E,EAAAA,EAAO,CAACjE,MAAM,UAAUG,GAAI,CAAEM,SAAU,UAE7ClB,EAAAA,EAAAA,KAACU,EAAAA,EAAO,CAACE,GAAI,CAAE,0BAA2B,OAAQV,UAC9CC,EAAAA,EAAAA,MAACwE,EAAAA,EAAI,CAAClE,MAAM,UAAUmE,KAAK,KAAI1E,SAAA,CAAC,UACpBkD,EAAM,IAAE,gBAGxBpD,EAAAA,EAAAA,KAAC6E,EAAAA,EAAc,CACXD,KAAK,KACLE,WAAW,YACXlE,GAAI,CACA,CAAC,MAADmE,OAAOC,EAAAA,EAAiBC,OAAS,CAC7BX,UAAW,SACXQ,WAAY,YACZ,uCAAwC,CACpCA,WAAY,YACZI,cAAe,YAEnB,iBAAkB,CACdC,WAAY,gBAGpB,CAAC,MAADJ,OAAOC,EAAAA,EAAiBC,KAAI,KAAAF,OAAIC,EAAAA,EAAiBI,WAC7C,CACIC,QAAS,oBACTC,aAAc,KACdC,aAAc,YACdC,YAAa,oBACbC,UAAW,oCAErBvF,UACFC,EAAAA,EAAAA,MAACuF,EAAAA,EAAS,CAAC9E,GAAI,CAAE+E,EAAG,GAAKC,iBAAe,EAAA1F,SAAA,EACpCF,EAAAA,EAAAA,KAAC6F,EAAAA,EAAgB,CAACpF,MAAM,UAASP,SAAC,6BAGlCF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAgB,CAAA5F,UACbF,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CACPmB,MAAM,UACNxB,GAAI,CACAyB,UAAW,UACXnB,SAAU,IAEd6E,gBACI/F,EAAAA,EAAAA,KAACgG,EAAAA,EAAY,CACTvF,MAAM,UACNG,GAAI,CAAEM,SAAU,MAEvBhB,SAAC,+MAOVF,EAAAA,EAAAA,KAACU,EAAAA,EAAO,UAGhBP,EAAAA,EAAAA,MAAA,OACIuB,MAAO,CACHC,QAAS,OACTI,aAAc,SACdC,WAAY,SACZuC,eAAgB,gBAChB0B,OAAQ,aACV/F,SAAA,EACFF,EAAAA,EAAAA,KAACkG,EAAAA,EAAQ,CACLC,MAAM,mBACN1F,MAAM,UACN2F,QAASpD,EAAUqD,OAAOrF,GACtB8B,EAAcwD,SAAStF,KAE3BuF,SAAUA,KACN,MAAMC,EAAO,IAAIxD,GAEbwD,EAAKH,OAAOrF,GAAS8B,EAAcwD,SAAStF,KAE5C+B,EAAiB,IAEjBA,EAAiByD,EACrB,KAIRxG,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,CACHjB,QAAQ,QACRI,MAAM,UACNc,QAASA,KACLmB,GAAa,EAAK,EAEtB+D,SAAU7D,EAAY1C,SAAC,cAG3BF,EAAAA,EAAAA,KAAC0G,EAAuB,CACpB/G,KAAM8C,EACN7C,QAAS8C,EACT7C,MAAOiD,OAGdE,EAAUjC,KAAI,CAACC,EAAYqD,KAEpBlE,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIC,EAAAA,EAAAA,MAAA,OACIuB,MAAO,CACHC,QAAS,OACTI,aAAc,SACdC,WAAY,SACZuC,eAAgB,gBAChB0B,OAAQ,aACV/F,SAAA,EACFF,EAAAA,EAAAA,KAACkG,EAAAA,EAAQ,CACLzF,MAAM,UACN0F,OACIhG,EAAAA,EAAAA,MAACc,EAAAA,GAAU,CAAC0F,KAAM,EAAEzG,SAAA,CACfc,EAAKG,SAAS,MAAIH,EAAKI,QAGhCR,GAAI,CAAEgG,YAAa,GACnBR,QAAStD,EAAcsB,MAClBL,GACGA,EAAa3C,OAASJ,EAAKI,OAEnCmF,SAAUA,IArKXvF,KACvB+B,GAAkB8D,GACKA,EAAUzC,MACxBL,GAAiBA,EAAa3C,OAASJ,EAAKI,OAItCyF,EAAUC,QACZC,GAAaA,EAAS3F,OAASJ,EAAKI,OAIlC,IAAIyF,EAAW7F,IAE5B,EAuJsCgG,CAAkBhG,MAEtChB,EAAAA,EAAAA,KAACyB,EAAY,CAACT,KAAMA,KACpBhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CACPmB,MAAM,UACNC,UAAW,QACX4E,GAAI,EACJC,SAAU,GAAGhH,SACZc,EAAK0C,YAGd1D,EAAAA,EAAAA,KAACU,EAAAA,EAAO,MAhCF2D,OAoChB,ECpHd,EA/Je8C,KACX,MAAOC,EAAcC,IAAmB1E,EAAAA,EAAAA,WAAS,IAC3C,UAAEK,IAAcC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,OAC7CmE,GAAWC,EAAAA,EAAAA,OAOVC,IAAiB7E,EAAAA,EAAAA,WAAS,GAEjC,OACIxC,EAAAA,EAAAA,MAAAsH,EAAAA,SAAA,CAAAvH,SAAA,EACIC,EAAAA,EAAAA,MAACuH,EAAAA,EAAG,CACAC,UAAU,SACV/G,GAAI,CACAgH,MAAO,OACPjG,QAAS,OACT4C,eAAgB,eAChBsD,QAAS,WACTC,SAAU,SACVC,IAAK,IACLC,OAAQ,KACRC,gBAAiB,kBACjBC,eAAgB,cAClBhI,SAAA,EACFF,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CACPmB,MAAM,KACNb,QAzBU4G,OA0BVvH,GAAI,CACAH,MAAO,OACP2H,WAAY,oBACZ3D,WAAY,OACZ4D,WAAY,iCACZC,cAAe,UACjBpI,SAAC,iBAGPF,EAAAA,EAAAA,KAACiC,EAAAA,GAAU,CAACV,QAhCIgH,KACxBlB,GAAgB,EAAK,EA+B4BnH,UACrCF,EAAAA,EAAAA,KAACwI,EAAAA,EAAK,CACFC,aAAczF,EAAUK,OACxBqF,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,UAAQ,EACRjI,GAAI,CACA,oBAAqB,CACjBM,SAAU,SACVuE,UAAW,kBACXhB,WAAY,OACZ2D,WAAY,sBAGpB/H,QAAQ,QACRI,MAAM,UACNmE,KAAK,KAAI1E,UACTF,EAAAA,EAAAA,KAAC8I,EAAAA,EAAc,CACXlI,GAAI,CACAH,MAAO,OACPsI,OAAQ,oBACRzD,aAAc,MACdG,UAAW,sCAK3BtF,EAAAA,EAAAA,MAAC6I,EAAAA,EAAM,CACHC,OAAO,QACPxI,MAAM,UACNd,KAAMyH,EACN8B,QAASA,IAAM7B,GAAgB,GAC/BzC,KAAK,KAAI1E,SAAA,EACTF,EAAAA,EAAAA,KAACmJ,EAAAA,EAAU,IACVnG,EAAUK,OAAS,GAChBrD,EAAAA,EAAAA,KAACwC,EAAM,KAEPxC,EAAAA,EAAAA,KAAAyH,EAAAA,SAAA,CAAAvH,UACIC,EAAAA,EAAAA,MAACiJ,EAAAA,EAAI,CACD/I,QAAQ,OACRI,MAAM,UACNG,GAAI,CACAyI,EAAG,EACHC,SAAU,IACV/E,eAAgB,SAChBxC,aAAc,SACdF,IAAK,QACP3B,SAAA,EACFF,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CAACmB,MAAM,WAAWmH,MAAM,SAAQrJ,SAAC,iCAG5CF,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CACPmB,MAAM,UACNxB,GAAI,CACAyB,UAAW,UACbnC,SAAC,qFAIPF,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,CACHjB,QAAQ,QACRI,MAAM,UACNG,GAAI,CACAe,QAAS,QACT0H,EAAG,QAEP9H,QAASA,KACL8F,GAAgB,IACfmC,OAAOC,SAASC,KAAKC,WAClB,aAEArC,EACI,+BACH,EACPpH,UACFF,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CACPR,MAAM,OACN2B,MAAM,UACNqC,WAAW,OAAMvE,SAAC,mCAS9CC,EAAAA,EAAAA,MAACuH,EAAAA,EAAG,CACArH,QAAQ,QACRO,GAAI,CACAe,QAAS,OACTK,WAAY,SACZuC,eAAgB,eAChBuD,SAAU,SACVC,IAAK,MACLC,OAAQ,IACRqB,EAAG,OACHnB,eAAgB,aAChB0B,UAAWpC,EACL,oBACA,iBACN1C,WACI,oDACN5E,SAAA,EACFF,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CACPmB,MAAM,WACNxB,GAAI,CAAEyB,UAAW,SAAUwH,SAAU,YAAa3J,SAAC,2CAGvDF,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,CACHqG,UAAU,IACVmC,KAAK,gBACLzJ,QAAQ,WACRI,MAAM,UACNsF,gBAAgB/F,EAAAA,EAAAA,KAAC+J,EAAAA,EAAK,CAACnJ,GAAI,CAAEH,MAAO,aAAgBP,UACpDF,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CAAAf,SAAC,wBAGrB,C","sources":["Components/DeleteConfirmationModal.tsx","Components/Cuenta.tsx","Components/Header.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n    Button,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Divider,\r\n    List,\r\n    Modal,\r\n    ModalDialog,\r\n    Typography,\r\n} from \"@mui/joy\";\r\nimport { WarningRounded } from \"@mui/icons-material\";\r\nimport { removeAllFromCart } from \"../features/menuSlice\";\r\n\r\nconst DeleteConfirmationModal = ({ open, setOpen, items }) => {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <Modal open={open}>\r\n            <ModalDialog variant=\"outlined\" role=\"alertdialog\">\r\n                <DialogTitle>\r\n                    <WarningRounded color=\"warning\" />\r\n                    Confirmación\r\n                </DialogTitle>\r\n                <Divider />\r\n                <DialogContent sx={{ overflow: \"visible\" }}>\r\n                    ¿Confirmas que deseas eliminar estos artículos seleccionados\r\n                    del carrito?\r\n                </DialogContent>\r\n                <List sx={{ overflow: \"auto\" }}>\r\n                    {items.map((item) => (\r\n                        <Typography key={item.name} fontSize={14}>\r\n                            {item.quantity} x {item.name}\r\n                        </Typography>\r\n                    ))}\r\n                </List>\r\n\r\n                <DialogActions>\r\n                    <Button\r\n                        variant=\"solid\"\r\n                        color=\"danger\"\r\n                        onClick={() => {\r\n                            setOpen(false);\r\n                            dispatch(removeAllFromCart(items));\r\n                        }}>\r\n                        Eliminar\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"plain\"\r\n                        color=\"neutral\"\r\n                        onClick={() => setOpen(false)}>\r\n                        Cancelar\r\n                    </Button>\r\n                </DialogActions>\r\n            </ModalDialog>\r\n        </Modal>\r\n    );\r\n};\r\nexport default DeleteConfirmationModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    IconButton,\r\n    Divider,\r\n    Typography,\r\n    Checkbox,\r\n    Chip,\r\n    Accordion,\r\n    AccordionDetails,\r\n    AccordionSummary,\r\n    AccordionGroup,\r\n    accordionClasses,\r\n    Button,\r\n} from \"@mui/joy\";\r\nimport { Add, PriorityHigh, Receipt, Remove } from \"@mui/icons-material\";\r\nimport DeleteConfirmationModal from \"./DeleteConfirmationModal.tsx\";\r\nimport { addItemToCart, removeItemFromCart } from \"../features/menuSlice\";\r\n\r\ninterface Item {\r\n    name: string;\r\n    description: string;\r\n    price: string;\r\n    quantity: number;\r\n    url: string;\r\n}\r\n\r\ninterface State {\r\n    menu: {\r\n        cartItems: Item[];\r\n    };\r\n}\r\nconst calculateTotal = (items: Item[] | Item) => {\r\n    const arrayItems = Array.isArray(items) ? items : [items];\r\n    return arrayItems.reduce((total, item) => {\r\n        const priceMatch = item.price.match(/[\\d.]+/);\r\n        const price = priceMatch ? parseFloat(priceMatch[0]) : 0;\r\n        return total + price * item.quantity;\r\n    }, 0);\r\n};\r\n\r\nconst QuantityEdit = ({ item }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                alignSelf: \"flex-end\",\r\n                gap: 4,\r\n                flexDirection: \"row\",\r\n                alignContent: \"center\",\r\n                alignItems: \"center\",\r\n            }}>\r\n            <IconButton\r\n                variant=\"soft\"\r\n                onClick={() => {\r\n                    dispatch(removeItemFromCart(item));\r\n                }}>\r\n                <Remove />\r\n            </IconButton>\r\n            <Typography level=\"body-lg\" sx={{ textAlign: \"center\" }}>\r\n                {item.quantity}\r\n            </Typography>\r\n            <IconButton\r\n                variant=\"soft\"\r\n                onClick={() => dispatch(addItemToCart(item))}>\r\n                <Add />\r\n            </IconButton>\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction itemsNeedUpdate(currentItems: Item[], newItems: Item[]) {\r\n    if (currentItems.length !== newItems.length) return true;\r\n\r\n    return currentItems.some((item, index) => {\r\n        return (\r\n            item.name !== newItems[index].name ||\r\n            item.quantity !== newItems[index].quantity\r\n        );\r\n    });\r\n}\r\n\r\nconst Cuenta = () => {\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [btnDisabled, setBtnDisabled] = useState(true);\r\n    const [selectedItems, setSelectedItems] = useState<Item[]>([]);\r\n    const { cartItems } = useSelector((state: State) => state.menu);\r\n\r\n    const total = calculateTotal(\r\n        selectedItems.length > 0 ? selectedItems : cartItems\r\n    );\r\n\r\n    useEffect(() => {\r\n        const updatedItems = selectedItems.map((selectedItem) => {\r\n            const cartItem = cartItems.find(\r\n                (item) => item.name === selectedItem.name\r\n            );\r\n            if (!cartItem) return selectedItem;\r\n            return {\r\n                ...selectedItem,\r\n                quantity: cartItem.quantity,\r\n            };\r\n        });\r\n\r\n        setBtnDisabled(updatedItems.length === 0);\r\n        if (itemsNeedUpdate(selectedItems, updatedItems)) {\r\n            setSelectedItems(updatedItems);\r\n        }\r\n    }, [cartItems, selectedItems]);\r\n\r\n    const handleItemChecked = (item: Item) => {\r\n        setSelectedItems((prevItems) => {\r\n            const itemExists = prevItems.some(\r\n                (selectedItem) => selectedItem.name === item.name\r\n            );\r\n            if (itemExists) {\r\n                // Filtrar fuera el item si ya existe\r\n                return prevItems.filter(\r\n                    (prevItem) => prevItem.name !== item.name\r\n                );\r\n            } else {\r\n                // Agregar el nuevo item a la lista\r\n                return [...prevItems, item];\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                marginTop: \"2em\",\r\n                alignContent: \"center\",\r\n                justifyContent: \"center\",\r\n            }}>\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    gap: 5,\r\n                    alignContent: \"center\",\r\n                    justifyContent: \"center \",\r\n                    alignItems: \"center\",\r\n                    marginBottom: \"1em\",\r\n                }}>\r\n                <Typography\r\n                    level=\"h1\"\r\n                    sx={{\r\n                        alignSelf: \"center\",\r\n                        fontWeight: 600,\r\n                        color: \"primary\",\r\n                    }}>\r\n                    Cuenta\r\n                </Typography>\r\n                <Receipt color=\"warning\" sx={{ fontSize: 50 }} />\r\n            </div>\r\n            <Divider sx={{ \"--Divider-childPosition\": \"80%\" }}>\r\n                <Chip color=\"warning\" size=\"lg\">\r\n                    Total: {total} {\" €\"}\r\n                </Chip>\r\n            </Divider>\r\n            <AccordionGroup\r\n                size=\"md\"\r\n                transition=\"0.2s ease\"\r\n                sx={{\r\n                    [`& .${accordionClasses.root}`]: {\r\n                        marginTop: \"0.5rem\",\r\n                        transition: \"0.2s ease\",\r\n                        '& button:not([aria-expanded=\"true\"])': {\r\n                            transition: \"0.2s ease\",\r\n                            paddingBottom: \"0.625rem\",\r\n                        },\r\n                        \"& button:hover\": {\r\n                            background: \"transparent\",\r\n                        },\r\n                    },\r\n                    [`& .${accordionClasses.root}.${accordionClasses.expanded}`]:\r\n                        {\r\n                            bgcolor: \"background.level1\",\r\n                            borderRadius: \"md\",\r\n                            borderBottom: \"1px solid\",\r\n                            borderColor: \"background.level2\",\r\n                            boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\",\r\n                        },\r\n                }}>\r\n                <Accordion sx={{ m: 1 }} defaultExpanded>\r\n                    <AccordionSummary color=\"warning\">\r\n                        ¡Importante lectura!\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Typography\r\n                            level=\"body-sm\"\r\n                            sx={{\r\n                                textAlign: \"justify\",\r\n                                fontSize: 13,\r\n                            }}\r\n                            startDecorator={\r\n                                <PriorityHigh\r\n                                    color=\"warning\"\r\n                                    sx={{ fontSize: 25 }}\r\n                                />\r\n                            }>\r\n                            El total del carrito es orientativo; el monto\r\n                            definitivo le será presentado por el camarero o el\r\n                            encargado al solicitar la cuenta. Agradecemos su\r\n                            comprensión y estamos a su servicio para dudas.\r\n                        </Typography>\r\n                    </AccordionDetails>\r\n                    <Divider />\r\n                </Accordion>\r\n            </AccordionGroup>\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                    margin: \"0.8em 1em\",\r\n                }}>\r\n                <Checkbox\r\n                    label=\"Seleccionar todo\"\r\n                    color=\"warning\"\r\n                    checked={cartItems.every((item) =>\r\n                        selectedItems.includes(item)\r\n                    )}\r\n                    onChange={() => {\r\n                        const cart = [...cartItems];\r\n                        if (\r\n                            cart.every((item) => selectedItems.includes(item))\r\n                        ) {\r\n                            setSelectedItems([]);\r\n                        } else {\r\n                            setSelectedItems(cart);\r\n                        }\r\n                    }}\r\n                />\r\n\r\n                <Button\r\n                    variant=\"solid\"\r\n                    color=\"warning\"\r\n                    onClick={() => {\r\n                        setModalOpen(true);\r\n                    }}\r\n                    disabled={btnDisabled}>\r\n                    Eliminar\r\n                </Button>\r\n                <DeleteConfirmationModal\r\n                    open={modalOpen}\r\n                    setOpen={setModalOpen}\r\n                    items={selectedItems}\r\n                />\r\n            </div>\r\n            {cartItems.map((item: Item, index: number) => {\r\n                return (\r\n                    <div key={index}>\r\n                        <div\r\n                            style={{\r\n                                display: \"flex\",\r\n                                alignContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"space-between\",\r\n                                margin: \"0.8em 1em\",\r\n                            }}>\r\n                            <Checkbox\r\n                                color=\"warning\"\r\n                                label={\r\n                                    <Typography flex={1}>\r\n                                        {item.quantity} x {item.name}\r\n                                    </Typography>\r\n                                }\r\n                                sx={{ marginRight: 2 }}\r\n                                checked={selectedItems.some(\r\n                                    (selectedItem) =>\r\n                                        selectedItem.name === item.name\r\n                                )}\r\n                                onChange={() => handleItemChecked(item)}\r\n                            />\r\n                            <QuantityEdit item={item} />\r\n                            <Typography\r\n                                level=\"body-lg\"\r\n                                textAlign={\"right\"}\r\n                                ml={2}\r\n                                minWidth={30}>\r\n                                {item.price}\r\n                            </Typography>\r\n                        </div>\r\n                        <Divider />\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cuenta;\r\n","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n    Card,\r\n    Drawer,\r\n    ModalClose,\r\n    Box,\r\n    Typography,\r\n    Badge,\r\n    IconButton,\r\n    Button,\r\n} from \"@mui/joy\";\r\nimport { Phone, ShoppingBasket } from \"@mui/icons-material\";\r\n\r\nimport Cuenta from \"../Components/Cuenta.tsx\";\r\n\r\nconst Header = () => {\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n    const { cartItems } = useSelector((state) => state.menu);\r\n    const navigate = useNavigate();\r\n    const handleLogoOnClick = () => {\r\n        // navigate(\"/\");\r\n    };\r\n    const handleCartIconClick = () => {\r\n        setIsDrawerOpen(true);\r\n    };\r\n    const [ocultarHeader] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Box\r\n                component=\"header\"\r\n                sx={{\r\n                    width: \"100%\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-evenly\",\r\n                    padding: \"0.5rem 0\",\r\n                    position: \"sticky\",\r\n                    top: \"0\",\r\n                    zIndex: 1100,\r\n                    backgroundColor: \"rgba(0,0,0,0.7)\",\r\n                    backdropFilter: \"blur(20px)\",\r\n                }}>\r\n                <Typography\r\n                    level=\"h1\"\r\n                    onClick={handleLogoOnClick}\r\n                    sx={{\r\n                        color: \"#fff\",\r\n                        fontFamily: \"Arial, sans-serif\",\r\n                        fontWeight: \"bold\",\r\n                        textShadow: \"2px 2px 4px rgba(0, 0, 0, 0.5)\",\r\n                        letterSpacing: \"0.05em\",\r\n                    }}>\r\n                    La Concheta\r\n                </Typography>\r\n                <IconButton onClick={handleCartIconClick}>\r\n                    <Badge\r\n                        badgeContent={cartItems.length}\r\n                        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n                        showZero\r\n                        sx={{\r\n                            \"& .MuiBadge-badge\": {\r\n                                fontSize: \"0.8rem\",\r\n                                boxShadow: \"0 0 0 2px #c369\",\r\n                                fontWeight: \"bold\",\r\n                                fontFamily: \"Arial, sans-serif\",\r\n                            },\r\n                        }}\r\n                        variant=\"solid\"\r\n                        color=\"warning\"\r\n                        size=\"md\">\r\n                        <ShoppingBasket\r\n                            sx={{\r\n                                color: \"#fff\",\r\n                                border: \"2px solid #2C1F16\",\r\n                                borderRadius: \"50%\",\r\n                                boxShadow: \"0 0 10px rgba(0, 0, 0, 0.5)\",\r\n                            }}\r\n                        />\r\n                    </Badge>\r\n                </IconButton>\r\n                <Drawer\r\n                    anchor=\"right\"\r\n                    color=\"warning\"\r\n                    open={isDrawerOpen}\r\n                    onClose={() => setIsDrawerOpen(false)}\r\n                    size=\"md\">\r\n                    <ModalClose />\r\n                    {cartItems.length > 0 ? (\r\n                        <Cuenta />\r\n                    ) : (\r\n                        <>\r\n                            <Card\r\n                                variant=\"soft\"\r\n                                color=\"warning\"\r\n                                sx={{\r\n                                    p: 2,\r\n                                    flexGrow: \"1\",\r\n                                    justifyContent: \"center\",\r\n                                    alignContent: \"center\",\r\n                                    gap: \"2rem\",\r\n                                }}>\r\n                                <Typography level=\"title-lg\" align=\"center\">\r\n                                    Tu carrito está vacío\r\n                                </Typography>\r\n                                <Typography\r\n                                    level=\"body-md\"\r\n                                    sx={{\r\n                                        textAlign: \"center\",\r\n                                    }}>\r\n                                    Para continuar, añade tus platos favoritos\r\n                                    al carrito desde nuestro menú.\r\n                                </Typography>\r\n                                <Button\r\n                                    variant=\"solid\"\r\n                                    color=\"warning\"\r\n                                    sx={{\r\n                                        display: \"block\",\r\n                                        p: \"auto\",\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        setIsDrawerOpen(false);\r\n                                        !window.location.hash.startsWith(\r\n                                            \"#/carta/\"\r\n                                        ) &&\r\n                                            navigate(\r\n                                                \"/carta/Entrantes%20Calientes\"\r\n                                            );\r\n                                    }}>\r\n                                    <Typography\r\n                                        color=\"#fff\"\r\n                                        level=\"body-lg\"\r\n                                        fontWeight=\"bold\">\r\n                                        Añadir platos\r\n                                    </Typography>\r\n                                </Button>\r\n                            </Card>\r\n                        </>\r\n                    )}\r\n                </Drawer>\r\n            </Box>\r\n            <Box\r\n                variant=\"plain\"\r\n                sx={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-evenly\",\r\n                    position: \"sticky\",\r\n                    top: \"4em\",\r\n                    zIndex: 1000,\r\n                    p: \".5em\",\r\n                    backdropFilter: \"blur(20px)\",\r\n                    transform: ocultarHeader\r\n                        ? \"translateY(-100%)\"\r\n                        : \"translateY(0%)\",\r\n                    transition:\r\n                        \"transform 0.2s cubic-bezier(0.22, 0.61, 0.36, 1)\",\r\n                }}>\r\n                <Typography\r\n                    level=\"title-lg\"\r\n                    sx={{ textAlign: \"center\", textWrap: \"balance \" }}>\r\n                    ¿Te gustaría reservar una mesa?\r\n                </Typography>\r\n                <Button\r\n                    component=\"a\"\r\n                    href=\"tel:962121602\"\r\n                    variant=\"outlined\"\r\n                    color=\"warning\"\r\n                    startDecorator={<Phone sx={{ color: \"#2C1F16\" }} />}>\r\n                    <Typography>LLámanos!</Typography>\r\n                </Button>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\nexport default Header;\r\n"],"names":["_ref","open","setOpen","items","dispatch","useDispatch","_jsx","Modal","children","_jsxs","ModalDialog","variant","role","DialogTitle","WarningRounded","color","Divider","DialogContent","sx","overflow","List","map","item","Typography","fontSize","quantity","name","DialogActions","Button","onClick","removeAllFromCart","QuantityEdit","style","display","alignSelf","gap","flexDirection","alignContent","alignItems","IconButton","removeItemFromCart","Remove","level","textAlign","addItemToCart","Add","Cuenta","modalOpen","setModalOpen","useState","btnDisabled","setBtnDisabled","selectedItems","setSelectedItems","cartItems","useSelector","state","menu","total","length","Array","isArray","reduce","priceMatch","price","match","parseFloat","useEffect","updatedItems","selectedItem","cartItem","find","currentItems","newItems","some","index","marginTop","justifyContent","marginBottom","fontWeight","Receipt","Chip","size","AccordionGroup","transition","concat","accordionClasses","root","paddingBottom","background","expanded","bgcolor","borderRadius","borderBottom","borderColor","boxShadow","Accordion","m","defaultExpanded","AccordionSummary","AccordionDetails","startDecorator","PriorityHigh","margin","Checkbox","label","checked","every","includes","onChange","cart","disabled","DeleteConfirmationModal","flex","marginRight","prevItems","filter","prevItem","handleItemChecked","ml","minWidth","Header","isDrawerOpen","setIsDrawerOpen","navigate","useNavigate","ocultarHeader","_Fragment","Box","component","width","padding","position","top","zIndex","backgroundColor","backdropFilter","handleLogoOnClick","fontFamily","textShadow","letterSpacing","handleCartIconClick","Badge","badgeContent","anchorOrigin","vertical","horizontal","showZero","ShoppingBasket","border","Drawer","anchor","onClose","ModalClose","Card","p","flexGrow","align","window","location","hash","startsWith","transform","textWrap","href","Phone"],"sourceRoot":""}