{"version":3,"file":"static/js/495.f3fddc59.chunk.js","mappings":"sPA6EA,QAtEA,YACIA,EAAAA,EAAAA,GAAiB,iCACjB,MAAM,eAAEC,IAAmBC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,OAClDC,GAAWC,EAAAA,EAAAA,OACX,aAAEC,IAAiBC,EAAAA,EAAAA,OAClBC,EAAOC,IAAYC,EAAAA,EAAAA,UACtBC,OAAOC,KAAKZ,GAAgBa,QAAQP,IAYxC,OAVAQ,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAgBJ,OAAOC,KAAKZ,GAAgBa,QAAQP,GAC1DG,EAASM,EAAc,GACxB,CAACT,EAAcN,KAQdgB,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACD,aAAW,gBACXC,YAAY,WACZC,SATgBC,CAACC,EAAOC,KAC5Bb,EAASa,GACTlB,EAAS,eAADmB,OAAgBZ,OAAOC,KAAKZ,GAAgBsB,IAAY,EAQ5Dd,MAAOA,EACPgB,GAAI,CAEAC,gBAAiB,cAGjBC,WAAY,UACdC,SAAA,EACFC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CACJL,GAAI,CACAM,SAAU,QACVC,KAAM,IAEN,uBAAwB,CAAEC,QAAS,QACnCC,MAAO,OACPC,EAAG,SACHC,IAAK,MACLC,QAAS,eACTC,aAAc,OAChBV,SACDhB,OAAO2B,QAAQtC,GAAgBuC,KAAI,CAAAC,EAAQC,KAAK,IAAXC,GAAIF,EAAA,OACtCZ,EAAAA,EAAAA,KAACe,EAAAA,EAAG,CAEAnB,GAAI,CAEA,iBAAkB,CACdoB,WAAY,SAElBjB,UACFC,EAAAA,EAAAA,KAACiB,EAAAA,GAAU,CAACC,MAAM,UAASnB,SAAEe,KAPxBD,EAQH,MAGb9B,OAAO2B,QAAQtC,GAAgBuC,KAAI,CAAAQ,EAAeN,KAAK,IAAlBC,EAAKlC,GAAMuC,EAAA,OAC7CnB,EAAAA,EAAAA,KAACoB,EAAAA,EAAQ,CAELxC,MAAOiC,EACPjB,GAAI,CAAEU,EAAG,YAAae,EAAG,KAAMtB,SAC9BnB,EAAM0C,KAAKX,KAAI,CAACY,EAAMT,KACnBd,EAAAA,EAAAA,KAACwB,EAAAA,EAAQ,CAACD,KAAMA,GAAWT,MAJ1BA,EAME,MAI3B,C","sources":["pages/ProductsPage.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Tabs, TabList, Tab, TabPanel, Typography } from \"@mui/joy\";\r\nimport ItemCard from \"../Components/ItemCard.jsx\";\r\nimport { useDocumentTitle } from \"../hooks/useDocumentTitle.js\";\r\n\r\nfunction ProductsPage() {\r\n    useDocumentTitle(\"LaConcheta - Carta de la casa\");\r\n    const { menuCategories } = useSelector((state) => state.menu);\r\n    const navigate = useNavigate();\r\n    const { categoryName } = useParams();\r\n    const [value, setValue] = useState(\r\n        Object.keys(menuCategories).indexOf(categoryName)\r\n    );\r\n    useEffect(() => {\r\n        const categoryIndex = Object.keys(menuCategories).indexOf(categoryName);\r\n        setValue(categoryIndex);\r\n    }, [categoryName, menuCategories]);\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        navigate(`/categories/${Object.keys(menuCategories)[newValue]}`);\r\n    };\r\n\r\n    return (\r\n        <Tabs\r\n            aria-label=\"Vertical tabs\"\r\n            orientation=\"vertical\"\r\n            onChange={handleTabChange}\r\n            value={value}\r\n            sx={{\r\n                // maxWidth: \"100%\",\r\n                backgroundColor: \"transparent\",\r\n                // position: \"relative\",\r\n                // display: \"flex\",\r\n                marginLeft: \"5.8rem\",\r\n            }}>\r\n            <TabList\r\n                sx={{\r\n                    position: \"fixed\",\r\n                    left: \"0\",\r\n                    // overflow: \"  hidden\",\r\n                    \"&::-webkit-scrollbar\": { display: \"none\" },\r\n                    width: \"7rem\",\r\n                    p: \"1rem 0\",\r\n                    gap: \"1em\",\r\n                    bgcolor: \"AppWorkspace\",\r\n                    borderRadius: \"8px\",\r\n                }}>\r\n                {Object.entries(menuCategories).map(([key], index) => (\r\n                    <Tab\r\n                        key={index}\r\n                        sx={{\r\n                            // paddingRight: 2,\r\n                            \"&.Mui-selected\": {\r\n                                fontWeight: \"bold\",\r\n                            },\r\n                        }}>\r\n                        <Typography level=\"body-lg\">{key}</Typography>\r\n                    </Tab>\r\n                ))}\r\n            </TabList>\r\n            {Object.entries(menuCategories).map(([key, value], index) => (\r\n                <TabPanel\r\n                    key={key}\r\n                    value={index}\r\n                    sx={{ p: \"0 0 0 1em\", m: \"0\" }}>\r\n                    {value.data.map((item, key) => (\r\n                        <ItemCard item={item} key={key} />\r\n                    ))}\r\n                </TabPanel>\r\n            ))}\r\n        </Tabs>\r\n    );\r\n}\r\n\r\nexport default ProductsPage;\r\n"],"names":["useDocumentTitle","menuCategories","useSelector","state","menu","navigate","useNavigate","categoryName","useParams","value","setValue","useState","Object","keys","indexOf","useEffect","categoryIndex","_jsxs","Tabs","orientation","onChange","handleTabChange","event","newValue","concat","sx","backgroundColor","marginLeft","children","_jsx","TabList","position","left","display","width","p","gap","bgcolor","borderRadius","entries","map","_ref","index","key","Tab","fontWeight","Typography","level","_ref2","TabPanel","m","data","item","ItemCard"],"sourceRoot":""}