{"version":3,"file":"static/js/925.43555725.chunk.js","mappings":"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","sources":["Components/QuantityEdit.tsx","Components/DeleteConfirmationModal.tsx","Components/CuentaHeader.tsx","Components/Cuenta.tsx","utils/utils.ts","Components/Header.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addItemToCart, removeItemFromCart } from \"../features/menuSlice\";\r\nimport { IconButton, Typography } from \"@mui/joy\";\r\nimport { Add, Remove } from \"@mui/icons-material\";\r\nimport { Item } from \"../types\";\r\n\r\nconst QuantityEdit = (props: Item) => {\r\n    const item = props;\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                gap: 4,\r\n                flexDirection: \"row\",\r\n                alignContent: \"center\",\r\n                alignItems: \"center\",\r\n            }}>\r\n            <IconButton\r\n                variant=\"soft\"\r\n                color=\"warning\"\r\n                onClick={() => {\r\n                    dispatch(removeItemFromCart(item));\r\n                }}>\r\n                <Remove />\r\n            </IconButton>\r\n            <Typography level=\"body-lg\" sx={{ textAlign: \"center\" }}>\r\n                {item.quantity}\r\n            </Typography>\r\n            <IconButton\r\n                variant=\"soft\"\r\n                color=\"warning\"\r\n                onClick={() => dispatch(addItemToCart(item))}>\r\n                <Add />\r\n            </IconButton>\r\n        </div>\r\n    );\r\n};\r\nexport default QuantityEdit;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n    Button,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Divider,\r\n    List,\r\n    Modal,\r\n    ModalDialog,\r\n    Typography,\r\n} from \"@mui/joy\";\r\nimport { WarningRounded } from \"@mui/icons-material\";\r\nimport { removeAllFromCart } from \"../features/menuSlice\";\r\n\r\nconst DeleteConfirmationModal = ({\r\n    open,\r\n    setOpen,\r\n    items,\r\n    setSelectedItems,\r\n}) => {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <Modal open={open}>\r\n            <ModalDialog variant=\"outlined\" role=\"alertdialog\">\r\n                <DialogTitle>\r\n                    <WarningRounded color=\"warning\" />\r\n                    Confirmación\r\n                </DialogTitle>\r\n                <Divider />\r\n                <DialogContent sx={{ overflow: \"visible\" }}>\r\n                    ¿Confirmas que deseas eliminar estos artículos seleccionados\r\n                    del carrito?\r\n                </DialogContent>\r\n                <List sx={{ overflow: \"auto\" }}>\r\n                    {items.map((item) => (\r\n                        <Typography key={item.id} fontSize={14}>\r\n                            {item.quantity} x {item.name}\r\n                        </Typography>\r\n                    ))}\r\n                </List>\r\n\r\n                <DialogActions>\r\n                    <Button\r\n                        variant=\"solid\"\r\n                        color=\"danger\"\r\n                        onClick={() => {\r\n                            setOpen(false);\r\n                            dispatch(removeAllFromCart(items));\r\n                            setSelectedItems([]);\r\n                        }}>\r\n                        Eliminar\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"plain\"\r\n                        color=\"neutral\"\r\n                        onClick={() => setOpen(false)}>\r\n                        Cancelar\r\n                    </Button>\r\n                </DialogActions>\r\n            </ModalDialog>\r\n        </Modal>\r\n    );\r\n};\r\nexport default DeleteConfirmationModal;\r\n","import React from \"react\";\r\nimport {\r\n    Chip,\r\n    Accordion,\r\n    AccordionDetails,\r\n    AccordionSummary,\r\n    AccordionGroup,\r\n    accordionClasses,\r\n    Typography,\r\n    Divider,\r\n} from \"@mui/joy\";\r\nimport { PriorityHigh, Receipt } from \"@mui/icons-material\";\r\n\r\nexport default function CuentaHeader({ total }: { total: number }) {\r\n    return (\r\n        <>\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    gap: 5,\r\n                    alignContent: \"center\",\r\n                    justifyContent: \"center \",\r\n                    alignItems: \"center\",\r\n                    marginBottom: \"1em\",\r\n                }}>\r\n                <Typography\r\n                    level=\"h1\"\r\n                    sx={{\r\n                        alignSelf: \"center\",\r\n                        fontWeight: 600,\r\n                        color: \"primary\",\r\n                    }}>\r\n                    Cuenta\r\n                </Typography>\r\n                <Receipt color=\"warning\" sx={{ fontSize: 50 }} />\r\n            </div>\r\n            <Divider sx={{ \"--Divider-childPosition\": \"80%\" }}>\r\n                <Chip color=\"warning\" size=\"lg\">\r\n                    Total: {total} {\" €\"}\r\n                </Chip>\r\n            </Divider>\r\n            <AccordionGroup\r\n                size=\"md\"\r\n                transition=\"0.2s ease\"\r\n                sx={{\r\n                    [`& .${accordionClasses.root}`]: {\r\n                        marginTop: \"0.5rem\",\r\n                        transition: \"0.2s ease\",\r\n                        '& button:not([aria-expanded=\"true\"])': {\r\n                            transition: \"0.2s ease\",\r\n                            paddingBottom: \"0.625rem\",\r\n                        },\r\n                        \"& button:hover\": {\r\n                            background: \"transparent\",\r\n                        },\r\n                    },\r\n                    [`& .${accordionClasses.root}.${accordionClasses.expanded}`]:\r\n                        {\r\n                            bgcolor: \"background.level1\",\r\n                            borderRadius: \"md\",\r\n                            borderBottom: \"1px solid\",\r\n                            borderColor: \"background.level2\",\r\n                            boxShadow: \"0px 4px 4px rgba(0, 0, 0, 0.25)\",\r\n                        },\r\n                }}>\r\n                <Accordion sx={{ m: 1 }} defaultExpanded>\r\n                    <AccordionSummary color=\"warning\">\r\n                        ¡Importante lectura!\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Typography\r\n                            level=\"body-sm\"\r\n                            sx={{\r\n                                textAlign: \"justify\",\r\n                                fontSize: 13,\r\n                            }}\r\n                            startDecorator={\r\n                                <PriorityHigh\r\n                                    color=\"warning\"\r\n                                    sx={{ fontSize: 25 }}\r\n                                />\r\n                            }>\r\n                            El total del carrito es orientativo; el monto\r\n                            definitivo le será presentado por el camarero o el\r\n                            encargado al solicitar la cuenta. Agradecemos su\r\n                            comprensión y estamos a su servicio para dudas.\r\n                        </Typography>\r\n                    </AccordionDetails>\r\n                    <Divider />\r\n                </Accordion>\r\n            </AccordionGroup>\r\n        </>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Divider, Typography, Checkbox, Button } from \"@mui/joy\";\r\n\r\nimport { calculateTotal } from \"../utils/utils.ts\";\r\nimport { Item, State } from \"../types.ts\";\r\nimport QuantityEdit from \"./QuantityEdit.tsx\";\r\nimport DeleteConfirmationModal from \"./DeleteConfirmationModal.tsx\";\r\nimport CuentaHeader from \"./CuentaHeader.tsx\";\r\n\r\nconst Cuenta = () => {\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [btnDisabled, setBtnDisabled] = useState(true);\r\n    const [selectedItems, setSelectedItems] = useState<Item[]>([]);\r\n    const { cartItems } = useSelector((state: State) => state.menu);\r\n\r\n    const total = calculateTotal(\r\n        selectedItems.length > 0 ? selectedItems : cartItems\r\n    );\r\n\r\n    useEffect(() => {\r\n        setBtnDisabled(selectedItems.length === 0);\r\n    }, [cartItems, selectedItems]);\r\n\r\n    const handleItemChecked = (item: Item) => {\r\n        setSelectedItems((prevItems) => {\r\n            const itemExists = prevItems.some(\r\n                (selectedItem) => selectedItem.id === item.id\r\n            );\r\n            if (itemExists) {\r\n                return prevItems.filter((prevItem) => prevItem.id !== item.id);\r\n            } else {\r\n                return [...prevItems, item];\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                marginTop: \"2em\",\r\n                alignContent: \"center\",\r\n                justifyContent: \"center\",\r\n            }}>\r\n            <CuentaHeader total={total} />\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                    margin: \"0.8em 1em\",\r\n                }}>\r\n                <Checkbox\r\n                    label=\"Seleccionar todo\"\r\n                    color=\"warning\"\r\n                    checked={cartItems.every((item) =>\r\n                        selectedItems.includes(item)\r\n                    )}\r\n                    onChange={() => {\r\n                        if (\r\n                            cartItems.every((item) =>\r\n                                selectedItems.includes(item)\r\n                            )\r\n                        ) {\r\n                            setSelectedItems([]);\r\n                        } else {\r\n                            setSelectedItems(cartItems);\r\n                        }\r\n                    }}\r\n                />\r\n\r\n                <Button\r\n                    variant=\"solid\"\r\n                    color=\"warning\"\r\n                    onClick={() => {\r\n                        setModalOpen(true);\r\n                    }}\r\n                    disabled={btnDisabled}>\r\n                    Eliminar\r\n                </Button>\r\n                <DeleteConfirmationModal\r\n                    open={modalOpen}\r\n                    setOpen={setModalOpen}\r\n                    items={selectedItems}\r\n                    setSelectedItems={setSelectedItems}\r\n                />\r\n            </div>\r\n            {cartItems.map((item: Item, index: number) => {\r\n                return (\r\n                    <div key={index}>\r\n                        <div\r\n                            style={{\r\n                                display: \"flex\",\r\n                                alignContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"space-between\",\r\n                                margin: \"0.8em 1em\",\r\n                            }}>\r\n                            <Checkbox\r\n                                color=\"warning\"\r\n                                label={\r\n                                    <Typography>\r\n                                        {item.quantity} x {item.name}\r\n                                    </Typography>\r\n                                }\r\n                                sx={{\r\n                                    alignContent: \"center\",\r\n                                    alignSelf: \"center\",\r\n                                    marginRight: 2,\r\n                                }}\r\n                                checked={selectedItems.some(\r\n                                    (selectedItem) =>\r\n                                        selectedItem.id === item.id\r\n                                )}\r\n                                onChange={() => handleItemChecked(item)}\r\n                            />\r\n                            <div\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    alignContent: \"center\",\r\n                                }}>\r\n                                <QuantityEdit {...item} />\r\n                                <Typography\r\n                                    level=\"body-lg\"\r\n                                    ml={1}\r\n                                    textAlign={\"right\"}\r\n                                    alignSelf={\"center\"}\r\n                                    width={45}>\r\n                                    {item.price}\r\n                                </Typography>\r\n                            </div>\r\n                        </div>\r\n                        <Divider />\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cuenta;\r\n","import { Item } from \"../types.ts\";\r\n\r\nexport const calculateTotal = (items: Item[] | Item) => {\r\n    const arrayItems = Array.isArray(items) ? items : [items];\r\n    return arrayItems.reduce((total, item) => {\r\n        const priceMatch = item.price.match(/[\\d.]+/);\r\n        const price = priceMatch ? parseFloat(priceMatch[0]) : 0;\r\n        return total + price * item.quantity;\r\n    }, 0);\r\n};\r\n","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n    Card,\r\n    Drawer,\r\n    ModalClose,\r\n    Box,\r\n    Typography,\r\n    Badge,\r\n    IconButton,\r\n    Button,\r\n} from \"@mui/joy\";\r\nimport { Phone, ShoppingBasket } from \"@mui/icons-material\";\r\n\r\nimport Cuenta from \"../Components/Cuenta.tsx\";\r\n\r\nconst Header = () => {\r\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n    const { cartItems } = useSelector((state) => state.menu);\r\n    const navigate = useNavigate();\r\n    const handleLogoOnClick = () => {\r\n        // navigate(\"/\");\r\n    };\r\n    const handleCartIconClick = () => {\r\n        setIsDrawerOpen(true);\r\n    };\r\n    const [ocultarHeader] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Box\r\n                component=\"header\"\r\n                sx={{\r\n                    width: \"100%\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-evenly\",\r\n                    padding: \"0.5rem 0\",\r\n                    position: \"sticky\",\r\n                    top: \"0\",\r\n                    zIndex: 1100,\r\n                    backgroundColor: \"rgba(0,0,0,0.7)\",\r\n                    backdropFilter: \"blur(20px)\",\r\n                }}>\r\n                <Typography\r\n                    level=\"h1\"\r\n                    onClick={handleLogoOnClick}\r\n                    sx={{\r\n                        color: \"#fff\",\r\n                        fontFamily: \"Arial, sans-serif\",\r\n                        fontWeight: \"bold\",\r\n                        textShadow: \"2px 2px 4px rgba(0, 0, 0, 0.5)\",\r\n                        letterSpacing: \"0.05em\",\r\n                    }}>\r\n                    La Concheta\r\n                </Typography>\r\n                <IconButton onClick={handleCartIconClick}>\r\n                    <Badge\r\n                        badgeContent={cartItems.length}\r\n                        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n                        showZero\r\n                        sx={{\r\n                            \"& .MuiBadge-badge\": {\r\n                                fontSize: \"0.8rem\",\r\n                                boxShadow: \"0 0 0 2px #c369\",\r\n                                fontWeight: \"bold\",\r\n                                fontFamily: \"Arial, sans-serif\",\r\n                            },\r\n                        }}\r\n                        variant=\"solid\"\r\n                        color=\"warning\"\r\n                        size=\"md\">\r\n                        <ShoppingBasket\r\n                            sx={{\r\n                                color: \"#fff\",\r\n                                border: \"2px solid #2C1F16\",\r\n                                borderRadius: \"50%\",\r\n                                boxShadow: \"0 0 10px rgba(0, 0, 0, 0.5)\",\r\n                            }}\r\n                        />\r\n                    </Badge>\r\n                </IconButton>\r\n                <Drawer\r\n                    anchor=\"right\"\r\n                    color=\"warning\"\r\n                    open={isDrawerOpen}\r\n                    onClose={() => setIsDrawerOpen(false)}\r\n                    size=\"md\">\r\n                    <ModalClose />\r\n                    {cartItems.length > 0 ? (\r\n                        <Cuenta />\r\n                    ) : (\r\n                        <>\r\n                            <Card\r\n                                variant=\"soft\"\r\n                                color=\"warning\"\r\n                                sx={{\r\n                                    p: 2,\r\n                                    flexGrow: \"1\",\r\n                                    justifyContent: \"center\",\r\n                                    alignContent: \"center\",\r\n                                    gap: \"2rem\",\r\n                                }}>\r\n                                <Typography level=\"title-lg\" align=\"center\">\r\n                                    Tu carrito está vacío\r\n                                </Typography>\r\n                                <Typography\r\n                                    level=\"body-md\"\r\n                                    sx={{\r\n                                        textAlign: \"center\",\r\n                                    }}>\r\n                                    Para continuar, añade tus platos favoritos\r\n                                    al carrito desde nuestro menú.\r\n                                </Typography>\r\n                                <Button\r\n                                    variant=\"solid\"\r\n                                    color=\"warning\"\r\n                                    sx={{\r\n                                        display: \"block\",\r\n                                        p: \"auto\",\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        setIsDrawerOpen(false);\r\n                                        !window.location.hash.startsWith(\r\n                                            \"#/carta/\"\r\n                                        ) &&\r\n                                            navigate(\r\n                                                \"/carta/Entrantes%20Calientes\"\r\n                                            );\r\n                                    }}>\r\n                                    <Typography\r\n                                        color=\"#fff\"\r\n                                        level=\"body-lg\"\r\n                                        fontWeight=\"bold\">\r\n                                        Añadir platos\r\n                                    </Typography>\r\n                                </Button>\r\n                            </Card>\r\n                        </>\r\n                    )}\r\n                </Drawer>\r\n            </Box>\r\n            <Box\r\n                variant=\"plain\"\r\n                sx={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-evenly\",\r\n                    position: \"sticky\",\r\n                    top: \"4em\",\r\n                    zIndex: 1000,\r\n                    p: \".5em\",\r\n                    backdropFilter: \"blur(20px)\",\r\n                    transform: ocultarHeader\r\n                        ? \"translateY(-100%)\"\r\n                        : \"translateY(0%)\",\r\n                    transition:\r\n                        \"transform 0.2s cubic-bezier(0.22, 0.61, 0.36, 1)\",\r\n                }}>\r\n                <Typography\r\n                    level=\"title-lg\"\r\n                    sx={{ textAlign: \"center\", textWrap: \"balance \" }}>\r\n                    ¿Te gustaría reservar una mesa?\r\n                </Typography>\r\n                <Button\r\n                    component=\"a\"\r\n                    href=\"tel:962121602\"\r\n                    variant=\"outlined\"\r\n                    color=\"warning\"\r\n                    startDecorator={<Phone sx={{ color: \"#2C1F16\" }} />}>\r\n                    <Typography>LLámanos!</Typography>\r\n                </Button>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\nexport default Header;\r\n"],"names":["props","item","dispatch","useDispatch","_jsxs","style","display","gap","flexDirection","alignContent","alignItems","children","_jsx","IconButton","variant","color","onClick","removeItemFromCart","Remove","Typography","level","sx","textAlign","quantity","addItemToCart","Add","_ref","open","setOpen","items","setSelectedItems","Modal","ModalDialog","role","DialogTitle","WarningRounded","Divider","DialogContent","overflow","List","map","fontSize","name","id","DialogActions","Button","removeAllFromCart","CuentaHeader","total","_Fragment","justifyContent","marginBottom","alignSelf","fontWeight","Receipt","Chip","size","AccordionGroup","transition","concat","accordionClasses","root","marginTop","paddingBottom","background","expanded","bgcolor","borderRadius","borderBottom","borderColor","boxShadow","Accordion","m","defaultExpanded","AccordionSummary","AccordionDetails","startDecorator","PriorityHigh","Cuenta","modalOpen","setModalOpen","useState","btnDisabled","setBtnDisabled","selectedItems","cartItems","useSelector","state","menu","length","Array","isArray","reduce","priceMatch","price","match","parseFloat","useEffect","margin","Checkbox","label","checked","every","includes","onChange","disabled","DeleteConfirmationModal","index","marginRight","some","selectedItem","prevItems","filter","prevItem","handleItemChecked","QuantityEdit","ml","width","Header","isDrawerOpen","setIsDrawerOpen","navigate","useNavigate","ocultarHeader","Box","component","padding","position","top","zIndex","backgroundColor","backdropFilter","handleLogoOnClick","fontFamily","textShadow","letterSpacing","handleCartIconClick","Badge","badgeContent","anchorOrigin","vertical","horizontal","showZero","ShoppingBasket","border","Drawer","anchor","onClose","ModalClose","Card","p","flexGrow","align","window","location","hash","startsWith","transform","textWrap","href","Phone"],"sourceRoot":""}